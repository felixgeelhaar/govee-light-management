import{w as v,i as y,A as b}from"./chunks/propertyInspectorInit-ES-6d6Fn.js";import{B as w}from"./chunks/BaseActionView-T1KDmxJI.js";import{d as I,k as l,s as V,m as k,h as A,o as C,i as W,f as s,y as d,D as f,t as m,I as z,G as L}from"./chunks/vue-vendor-CA8X9H5U.js";import{_ as P}from"./chunks/feedback-DiKmv6ah.js";import"./chunks/xstate-vendor-C3sHgvBT.js";const B={class:"config-section"},D={class:"form-group"},M={class:"slider-container"},N=["min","max"],O={class:"slider-value"},U={class:"help-text"},K={class:"form-group"},R={class:"slider-container"},j={class:"slider-value"},E={class:"form-group"},G={for:"toggleOnPush"},q=I({__name:"WarmthActionView",setup(H){const a=l(5e3),i=l(200),p=l(2e3),c=l(9e3),r=l(!0),u=l(),_=(t,e,o)=>{g()},T=t=>{console.log("Settings changed:",t)},x=t=>t<=2500?"Very Warm":t<=3e3?"Warm":t<=4e3?"Neutral Warm":t<=5e3?"Neutral":t<=6e3?"Cool":t<=7e3?"Very Cool":"Extremely Cool",g=()=>{if(!u.value)return;const t={targetType:"light",colorTemperature:a.value,stepSize:i.value,minTemperature:p.value,maxTemperature:c.value,toggleOnPush:r.value},e=u.value.selectedLight,o=u.value.selectedLightInfo;if(e&&o){const[h,n]=e.split("|");t.lightId=h,t.lightModel=n,t.lightName=o.label}u.value.saveSettings(t)};return V([a,i,p,c,r],()=>{g()}),k(()=>{const t=()=>{v.isConnected?v.on("sendToPropertyInspector",e=>{if(e.payload?.event==="currentSettings"){const o=e.payload.settings;a.value=o.colorTemperature||5e3,i.value=o.stepSize||200,p.value=o.minTemperature||2e3,c.value=o.maxTemperature||9e3,r.value=o.toggleOnPush!==!1}}):setTimeout(t,100)};t()}),(t,e)=>(C(),A(w,{"action-type":"warmth","config-title":"Warmth/Temperature Settings","action-summary":"Adjust Light Warmth",onLightSelected:_,onSettingsChanged:T,ref_key:"baseActionRef",ref:u},{"action-config":W(({selectedLight:o,lightInfo:h})=>[s("section",B,[e[7]||(e[7]=s("h2",null,"Warmth Settings",-1)),s("div",D,[e[3]||(e[3]=s("label",{for:"temperature"},"Default Temperature",-1)),s("div",M,[d(s("input",{id:"temperature",type:"range","onUpdate:modelValue":e[0]||(e[0]=n=>a.value=n),min:p.value,max:c.value,step:100,class:"slider"},null,8,N),[[f,a.value,void 0,{number:!0}]]),s("span",O,m(a.value)+"K",1)]),s("small",U,m(x(a.value))+" - Set the color temperature when button is pressed ",1)]),s("div",K,[e[4]||(e[4]=s("label",{for:"stepSize"},"Step Size (for dial)",-1)),s("div",R,[d(s("input",{id:"stepSize",type:"range","onUpdate:modelValue":e[1]||(e[1]=n=>i.value=n),min:"50",max:"1000",step:"50",class:"slider"},null,512),[[f,i.value,void 0,{number:!0}]]),s("span",j,m(i.value)+"K",1)]),e[5]||(e[5]=s("small",{class:"help-text"}," Temperature change per dial rotation step ",-1))]),s("div",E,[s("label",G,[d(s("input",{id:"toggleOnPush",type:"checkbox","onUpdate:modelValue":e[2]||(e[2]=n=>r.value=n),class:"checkbox"},null,512),[[z,r.value]]),e[6]||(e[6]=s("span",null,"Toggle on/off with dial push",-1))])])])]),_:1},512))}}),F=P(q,[["__scopeId","data-v-d24b6c22"]]);y();const S=L(b);S.component("main-view",F);S.mount("#app");
