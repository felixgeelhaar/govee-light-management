{"version":3,"file":"light-control.js","sources":["../../../src/frontend/composables/useFeedback.ts","../../../src/frontend/views/LightControlView.vue","../../../src/frontend/light-control.ts"],"sourcesContent":["import { inject, type Ref } from 'vue'\r\nimport type FeedbackSystem from '../components/FeedbackSystem.vue'\r\n\r\n/**\r\n * Composable for accessing the global feedback system\r\n * Provides toast notifications, loading overlays, and success animations\r\n */\r\nexport function useFeedback() {\r\n  const feedbackSystem = inject<Ref<InstanceType<typeof FeedbackSystem>>>('feedbackSystem')\r\n\r\n  if (!feedbackSystem?.value) {\r\n    console.warn('Feedback system not available - ensure App.vue provides it')\r\n    // Return no-op functions to prevent errors\r\n    return {\r\n      showToast: () => '',\r\n      showSuccessToast: () => '',\r\n      showError: () => '',\r\n      showWarning: () => '',\r\n      showInfo: () => '',\r\n      dismissToast: () => {},\r\n      updateToastProgress: () => {},\r\n      showGlobalLoading: () => {},\r\n      hideGlobalLoading: () => {},\r\n      updateGlobalLoadingProgress: () => {},\r\n      showSuccessAnimation: () => {}\r\n    }\r\n  }\r\n\r\n  return {\r\n    // Toast methods\r\n    showToast: feedbackSystem.value.showToast,\r\n    showSuccessToast: feedbackSystem.value.showSuccessToast,\r\n    showError: feedbackSystem.value.showError,\r\n    showWarning: feedbackSystem.value.showWarning,\r\n    showInfo: feedbackSystem.value.showInfo,\r\n    dismissToast: feedbackSystem.value.dismissToast,\r\n    updateToastProgress: feedbackSystem.value.updateToastProgress,\r\n\r\n    // Global loading methods\r\n    showGlobalLoading: feedbackSystem.value.showGlobalLoading,\r\n    hideGlobalLoading: feedbackSystem.value.hideGlobalLoading,\r\n    updateGlobalLoadingProgress: feedbackSystem.value.updateGlobalLoadingProgress,\r\n\r\n    // Success animation\r\n    showSuccessAnimation: feedbackSystem.value.showSuccessAnimation\r\n  }\r\n}\r\n\r\n/**\r\n * Helper functions for common feedback patterns\r\n */\r\nexport function useFeedbackHelpers() {\r\n  const feedback = useFeedback()\r\n\r\n  return {\r\n    ...feedback,\r\n\r\n    // Common patterns\r\n    showApiError: (error: any, title = 'API Error') => {\r\n      const message = error?.message || 'An unexpected error occurred'\r\n      return feedback.showError(title, message, [\r\n        {\r\n          label: 'Retry',\r\n          type: 'primary' as const,\r\n          action: () => {\r\n            if (typeof window !== 'undefined') {\r\n              window.location.reload()\r\n            }\r\n          }\r\n        }\r\n      ])\r\n    },\r\n\r\n    showValidationError: (message: string) => {\r\n      return feedback.showError('Validation Error', message)\r\n    },\r\n\r\n    showSaveSuccess: (itemName = 'Settings') => {\r\n      return feedback.showSuccessToast(`${itemName} Saved`, 'Your changes have been saved successfully')\r\n    },\r\n\r\n    showLoadingWithProgress: (text: string) => {\r\n      feedback.showGlobalLoading(text, 0)\r\n      \r\n      return {\r\n        updateProgress: (progress: number, newText?: string) => {\r\n          feedback.updateGlobalLoadingProgress(progress, newText)\r\n        },\r\n        complete: () => {\r\n          feedback.hideGlobalLoading()\r\n        }\r\n      }\r\n    },\r\n\r\n    showOperationSuccess: (operation: string) => {\r\n      feedback.showSuccessAnimation(`${operation} completed successfully!`)\r\n    }\r\n  }\r\n}","<template>\r\n  <div class=\"light-control-view\">\r\n    <!-- API Configuration Section -->\r\n    <section class=\"config-section\" data-testid=\"api-key-section\">\r\n      <h2>API Configuration</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"apiKey\">API Key</label>\r\n        <div class=\"input-group\">\r\n          <input\r\n            id=\"apiKey\"\r\n            v-model=\"localApiKey\"\r\n            type=\"password\"\r\n            class=\"form-input\"\r\n            placeholder=\"Enter your Govee API key\"\r\n            autocomplete=\"off\"\r\n            :disabled=\"apiConnection.isConnecting.value\"\r\n            @keyup.enter=\"connectToApi\"\r\n          />\r\n          <button\r\n            v-if=\"apiConnection.isDisconnected || apiConnection.hasError\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"!localApiKey || apiConnection.isConnecting.value\"\r\n            @click=\"connectToApi\"\r\n          >\r\n            <span v-if=\"apiConnection.isConnecting\">Connecting...</span>\r\n            <span v-else>Connect</span>\r\n          </button>\r\n          <button\r\n            v-else-if=\"apiConnection.isConnected\"\r\n            class=\"btn btn-secondary\"\r\n            @click=\"apiConnection.disconnect\"\r\n          >\r\n            Disconnect\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Connection Status -->\r\n        <div v-if=\"apiConnection.isConnecting\" class=\"status-message status-loading\">\r\n          <span class=\"status-icon\">⏳</span>\r\n          Validating API key...\r\n        </div>\r\n        <div v-else-if=\"apiConnection.isConnected\" class=\"status-message status-success\">\r\n          <span class=\"status-icon\">✅</span>\r\n          API key validated successfully\r\n        </div>\r\n        <div v-else-if=\"apiConnection.hasError\" class=\"status-message status-error\">\r\n          <span class=\"status-icon\">❌</span>\r\n          {{ apiConnection.error }}\r\n          <button class=\"btn-link\" @click=\"apiConnection.retry\">Retry</button>\r\n        </div>\r\n        \r\n        <small class=\"help-text\">\r\n          Get your API key from the Govee Home app → Settings → About Us → Apply for API Key\r\n        </small>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Light Selection Section -->\r\n    <section class=\"config-section\" data-testid=\"light-selection-section\">\r\n      <h2>Light Selection</h2>\r\n      \r\n      <!-- Fetch Lights Button -->\r\n      <div v-if=\"lightDiscovery.isIdle\" class=\"form-group\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          :disabled=\"!apiConnection.isConnected\"\r\n          @click=\"lightDiscovery.fetchLights\"\r\n        >\r\n          Discover Lights\r\n        </button>\r\n        <small class=\"help-text\">\r\n          Connect your API key first, then discover available lights\r\n        </small>\r\n      </div>\r\n      \r\n      <!-- Loading State -->\r\n      <div v-else-if=\"lightDiscovery.isFetchingLights\" class=\"status-message status-loading\">\r\n        <span class=\"status-icon\">⏳</span>\r\n        Discovering lights...\r\n      </div>\r\n      \r\n      <!-- Error State -->\r\n      <div v-else-if=\"lightDiscovery.hasError\" class=\"status-message status-error\">\r\n        <span class=\"status-icon\">❌</span>\r\n        {{ lightDiscovery.error }}\r\n        <button class=\"btn-link\" @click=\"lightDiscovery.retryFetch\">Retry</button>\r\n      </div>\r\n      \r\n      <!-- Light Selection -->\r\n      <div v-else-if=\"lightDiscovery.isReady\" class=\"form-group\">\r\n        <!-- Search -->\r\n        <div v-if=\"lightDiscovery.hasLights\" class=\"search-group\">\r\n          <input\r\n            v-model=\"searchQuery\"\r\n            type=\"text\"\r\n            class=\"form-input\"\r\n            placeholder=\"Search lights...\"\r\n            @input=\"lightDiscovery.searchLights(searchQuery)\"\r\n          />\r\n          <button\r\n            v-if=\"searchQuery\"\r\n            class=\"btn-clear\"\r\n            @click=\"clearSearch\"\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Light Dropdown -->\r\n        <div class=\"form-group\">\r\n          <label for=\"lightSelect\">Light</label>\r\n          <select\r\n            id=\"lightSelect\"\r\n            v-model=\"selectedLight\"\r\n            class=\"form-select\"\r\n            :disabled=\"!lightDiscovery.hasFilteredLights\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              {{ lightDiscovery.hasFilteredLights ? 'Select a light...' : 'No lights found' }}\r\n            </option>\r\n            <option\r\n              v-for=\"light in lightDiscovery.filteredLights.value\"\r\n              :key=\"light.value\"\r\n              :value=\"light.value\"\r\n            >\r\n              {{ light.label }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        \r\n        <!-- Refresh Button -->\r\n        <button\r\n          class=\"btn btn-secondary\"\r\n          @click=\"lightDiscovery.refreshLights\"\r\n          :disabled=\"lightDiscovery.isFetchingLights\"\r\n        >\r\n          <span v-if=\"lightDiscovery.isFetchingLights\">Refreshing...</span>\r\n          <span v-else>Refresh Lights</span>\r\n        </button>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Control Mode Section -->\r\n    <section class=\"config-section\" data-testid=\"control-mode-section\">\r\n      <h2>Control Mode</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"controlMode\">Control Mode</label>\r\n        <select\r\n          id=\"controlMode\"\r\n          v-model=\"controlMode\"\r\n          class=\"form-select\"\r\n        >\r\n          <option value=\"toggle\">Toggle On/Off</option>\r\n          <option value=\"on\">Turn On</option>\r\n          <option value=\"off\">Turn Off</option>\r\n          <option value=\"brightness\">Set Brightness</option>\r\n          <option value=\"color\">Set Color</option>\r\n          <option value=\"colorTemp\">Set Color Temperature</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Brightness Control -->\r\n      <div v-if=\"controlMode === 'brightness'\" class=\"form-group\">\r\n        <label for=\"brightness\">Brightness (%)</label>\r\n        <input\r\n          id=\"brightness\"\r\n          v-model.number=\"brightnessValue\"\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"100\"\r\n          class=\"form-range\"\r\n        />\r\n        <span class=\"range-value\">{{ brightnessValue }}%</span>\r\n      </div>\r\n\r\n      <!-- Color Control -->\r\n      <div v-if=\"controlMode === 'color'\" class=\"form-group\">\r\n        <label for=\"color\">Color</label>\r\n        <input\r\n          id=\"color\"\r\n          v-model=\"colorValue\"\r\n          type=\"color\"\r\n          class=\"form-color\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Color Temperature Control -->\r\n      <div v-if=\"controlMode === 'colorTemp'\" class=\"form-group\">\r\n        <label for=\"colorTemp\">Color Temperature (K)</label>\r\n        <input\r\n          id=\"colorTemp\"\r\n          v-model.number=\"colorTempValue\"\r\n          type=\"range\"\r\n          min=\"2000\"\r\n          max=\"9000\"\r\n          step=\"100\"\r\n          class=\"form-range\"\r\n        />\r\n        <span class=\"range-value\">{{ colorTempValue }}K</span>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted } from 'vue'\r\nimport type { ControlMode } from '@shared/types'\r\nimport { useApiConnection } from '../composables/useApiConnection'\r\nimport { useLightDiscovery } from '../composables/useLightDiscovery'\r\nimport { useLightControlSettings } from '../composables/useSettings'\r\nimport { useFeedbackHelpers } from '../composables/useFeedback'\r\n\r\n// XState composables\r\nconst apiConnection = useApiConnection()\r\nconst lightDiscovery = useLightDiscovery()\r\n\r\n// Settings composable with persistence\r\nconst settingsManager = useLightControlSettings()\r\n\r\n// Feedback system for user notifications\r\nconst feedback = useFeedbackHelpers()\r\n\r\n// Local reactive state for UI\r\nconst searchQuery = ref<string>('')\r\n\r\n// Computed values bound to settings\r\nconst localApiKey = computed({\r\n  get: () => settingsManager.settings.apiKey || '',\r\n  set: (value: string) => settingsManager.updateSetting('apiKey', value || undefined)\r\n})\r\n\r\nconst selectedLight = computed({\r\n  get: () => {\r\n    const deviceId = settingsManager.settings.selectedDeviceId\r\n    const model = settingsManager.settings.selectedModel\r\n    return deviceId && model ? `${deviceId}|${model}` : ''\r\n  },\r\n  set: (value: string) => {\r\n    if (value) {\r\n      const [deviceId, model] = value.split('|')\r\n      const lightName = lightDiscovery.filteredLights.value.find(l => l.value === value)?.label\r\n      settingsManager.updateSettings({\r\n        selectedDeviceId: deviceId,\r\n        selectedModel: model,\r\n        selectedLightName: lightName\r\n      })\r\n    } else {\r\n      settingsManager.updateSettings({\r\n        selectedDeviceId: undefined,\r\n        selectedModel: undefined,\r\n        selectedLightName: undefined\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\nconst controlMode = computed({\r\n  get: () => settingsManager.settings.controlMode || 'toggle',\r\n  set: (value: ControlMode) => settingsManager.updateSetting('controlMode', value)\r\n})\r\n\r\nconst brightnessValue = computed({\r\n  get: () => settingsManager.settings.brightnessValue || 100,\r\n  set: (value: number) => settingsManager.updateSetting('brightnessValue', value)\r\n})\r\n\r\nconst colorValue = computed({\r\n  get: () => settingsManager.settings.colorValue || '#ffffff',\r\n  set: (value: string) => settingsManager.updateSetting('colorValue', value)\r\n})\r\n\r\nconst colorTempValue = computed({\r\n  get: () => settingsManager.settings.colorTempValue || 6500,\r\n  set: (value: number) => settingsManager.updateSetting('colorTempValue', value)\r\n})\r\n\r\n// Actions\r\nconst connectToApi = () => {\r\n  if (localApiKey.value) {\r\n    feedback.showInfo('Connecting to API', 'Validating your API key...')\r\n    apiConnection.connect(localApiKey.value)\r\n  }\r\n}\r\n\r\nconst clearSearch = () => {\r\n  searchQuery.value = ''\r\n  lightDiscovery.clearSearch()\r\n}\r\n\r\n// Watch for API connection changes to automatically fetch lights\r\nwatch(\r\n  () => apiConnection.isConnected.value,\r\n  (isConnected, wasConnected) => {\r\n    if (isConnected && !wasConnected) {\r\n      feedback.showSuccessToast('API Connected', 'Successfully connected to Govee API')\r\n      if (lightDiscovery.isIdle.value) {\r\n        lightDiscovery.fetchLights()\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\n// Watch for API connection errors\r\nwatch(\r\n  () => apiConnection.error.value,\r\n  (error) => {\r\n    if (error) {\r\n      feedback.showApiError({ message: error }, 'API Connection Failed')\r\n    }\r\n  }\r\n)\r\n\r\n// Watch for light discovery success\r\nwatch(\r\n  () => lightDiscovery.isReady.value,\r\n  (isReady, wasReady) => {\r\n    if (isReady && !wasReady && lightDiscovery.hasLights.value) {\r\n      const lightCount = lightDiscovery.lights.value.length\r\n      feedback.showSuccessToast(\r\n        'Lights Discovered', \r\n        `Found ${lightCount} light${lightCount !== 1 ? 's' : ''}`\r\n      )\r\n    }\r\n  }\r\n)\r\n\r\n// Watch for light discovery errors\r\nwatch(\r\n  () => lightDiscovery.error.value,\r\n  (error) => {\r\n    if (error) {\r\n      feedback.showApiError({ message: error }, 'Light Discovery Failed')\r\n    }\r\n  }\r\n)\r\n\r\n// Watch for API key changes in settings to update connection\r\nwatch(\r\n  () => settingsManager.settings.apiKey,\r\n  (newApiKey) => {\r\n    if (newApiKey && !apiConnection.isConnected.value) {\r\n      apiConnection.connect(newApiKey)\r\n    }\r\n  }\r\n)\r\n\r\n// Watch for settings save events\r\nwatch(\r\n  () => settingsManager.lastSaved,\r\n  (lastSaved) => {\r\n    if (lastSaved) {\r\n      feedback.showSuccessToast('Settings Saved', 'Your configuration has been saved')\r\n    }\r\n  }\r\n)\r\n\r\n// Initialize on mount\r\nonMounted(() => {\r\n  // Enable auto-save with 500ms delay for responsive UI\r\n  settingsManager.enableAutoSave(500)\r\n  \r\n  // Load existing settings\r\n  settingsManager.loadSettings()\r\n  \r\n  // If we have an API key in settings, connect automatically\r\n  if (settingsManager.settings.apiKey) {\r\n    apiConnection.connect(settingsManager.settings.apiKey)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.light-control-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n\r\n.config-section {\r\n  padding: 16px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 8px;\r\n  background-color: var(--sdpi-color-bg-secondary, #2d2d30);\r\n}\r\n\r\n.config-section h2 {\r\n  margin: 0 0 16px 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: var(--sdpi-color-accent, #0099ff);\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.form-group label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: var(--sdpi-color-text, #cccccc);\r\n}\r\n\r\n.form-input,\r\n.form-select {\r\n  padding: 8px 12px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 4px;\r\n  background-color: var(--sdpi-color-bg, #1e1e1e);\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  font-size: 14px;\r\n}\r\n\r\n.form-input:focus,\r\n.form-select:focus {\r\n  outline: none;\r\n  border-color: var(--sdpi-color-accent, #0099ff);\r\n}\r\n\r\n.form-range {\r\n  width: 100%;\r\n  margin: 8px 0;\r\n}\r\n\r\n.form-color {\r\n  width: 60px;\r\n  height: 40px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.range-value {\r\n  font-size: 12px;\r\n  color: var(--sdpi-color-text-secondary, #999);\r\n  align-self: flex-end;\r\n}\r\n\r\n.help-text {\r\n  font-size: 12px;\r\n  color: var(--sdpi-color-text-secondary, #999);\r\n  line-height: 1.4;\r\n}\r\n\r\n/* Button Styles */\r\n.btn {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--sdpi-color-accent, #0099ff);\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: var(--sdpi-color-accent-hover, #0077cc);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: var(--sdpi-color-bg-tertiary, #404040);\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: var(--sdpi-color-bg-hover, #505050);\r\n}\r\n\r\n.btn-link {\r\n  background: none;\r\n  border: none;\r\n  color: var(--sdpi-color-accent, #0099ff);\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n  padding: 0;\r\n  margin-left: 8px;\r\n}\r\n\r\n.btn-link:hover {\r\n  color: var(--sdpi-color-accent-hover, #0077cc);\r\n}\r\n\r\n/* Input Group */\r\n.input-group {\r\n  display: flex;\r\n  gap: 8px;\r\n  align-items: center;\r\n}\r\n\r\n.input-group .form-input {\r\n  flex: 1;\r\n}\r\n\r\n/* Search Group */\r\n.search-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.btn-clear {\r\n  position: absolute;\r\n  right: 8px;\r\n  background: none;\r\n  border: none;\r\n  color: var(--sdpi-color-text-secondary, #999);\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  padding: 0;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.btn-clear:hover {\r\n  color: var(--sdpi-color-text, #cccccc);\r\n}\r\n\r\n/* Status Messages */\r\n.status-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  margin: 8px 0;\r\n}\r\n\r\n.status-loading {\r\n  background-color: var(--sdpi-color-bg-info, #1a3b5c);\r\n  color: var(--sdpi-color-text-info, #79c7ff);\r\n  border: 1px solid var(--sdpi-color-border-info, #0099ff);\r\n}\r\n\r\n.status-success {\r\n  background-color: var(--sdpi-color-bg-success, #1a3b1a);\r\n  color: var(--sdpi-color-text-success, #7dd87d);\r\n  border: 1px solid var(--sdpi-color-border-success, #28a745);\r\n}\r\n\r\n.status-error {\r\n  background-color: var(--sdpi-color-bg-error, #3b1a1a);\r\n  color: var(--sdpi-color-text-error, #ff7979);\r\n  border: 1px solid var(--sdpi-color-border-error, #dc3545);\r\n}\r\n\r\n.status-icon {\r\n  font-size: 16px;\r\n  flex-shrink: 0;\r\n}\r\n</style>","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport LightControlView from './views/LightControlView.vue'\r\nimport { initializePropertyInspector } from './utils/propertyInspectorInit'\r\n\r\n// Initialize Property Inspector WebSocket connection\r\ninitializePropertyInspector()\r\n\r\n// Create and mount the Vue application for Light Control Property Inspector\r\nconst app = createApp(App)\r\n\r\n// Add the light control view as the main content\r\napp.component('main-view', LightControlView)\r\n\r\n// Mount the app with the specific view\r\napp.mount('#app')"],"names":["useFeedback","feedbackSystem","inject","useFeedbackHelpers","feedback","error","title","message","itemName","text","progress","newText","operation","apiConnection","useApiConnection","lightDiscovery","useLightDiscovery","settingsManager","useLightControlSettings","searchQuery","ref","localApiKey","computed","value","selectedLight","deviceId","model","lightName","l","controlMode","brightnessValue","colorValue","colorTempValue","connectToApi","clearSearch","watch","isConnected","wasConnected","isReady","wasReady","lightCount","newApiKey","lastSaved","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","$event","_unref","args","_hoisted_9","_hoisted_10","_hoisted_11","_createTextVNode","_toDisplayString","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","_Fragment","light","_hoisted_22","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","initializePropertyInspector","app","createApp","App","LightControlView"],"mappings":"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"}