{"version":3,"file":"light-control.js","sources":["../../../src/frontend/views/LightControlView.vue","../../../src/frontend/light-control.ts"],"sourcesContent":["<template>\n  <div class=\"light-control-view\">\n    <!-- API Configuration Section -->\n    <section class=\"config-section\" data-testid=\"api-key-section\">\n      <h2>API Configuration</h2>\n      <div class=\"form-group\">\n        <label for=\"apiKey\">API Key</label>\n        <div class=\"input-group\">\n          <input\n            id=\"apiKey\"\n            v-model=\"localApiKey\"\n            type=\"password\"\n            class=\"form-input\"\n            placeholder=\"Enter your Govee API key\"\n            autocomplete=\"off\"\n            :disabled=\"apiConnection.isConnecting.value\"\n            @keyup.enter=\"connectToApi\"\n          />\n          <button\n            v-if=\"apiConnection.isDisconnected || apiConnection.hasError\"\n            class=\"btn btn-primary\"\n            :disabled=\"!localApiKey || apiConnection.isConnecting.value\"\n            @click=\"connectToApi\"\n          >\n            <span v-if=\"apiConnection.isConnecting\">Connecting...</span>\n            <span v-else>Connect</span>\n          </button>\n          <button\n            v-else-if=\"apiConnection.isConnected\"\n            class=\"btn btn-secondary\"\n            @click=\"apiConnection.disconnect\"\n          >\n            Disconnect\n          </button>\n        </div>\n\n        <!-- Connection Status -->\n        <div\n          v-if=\"apiConnection.isConnecting\"\n          class=\"status-message status-loading\"\n        >\n          <span class=\"status-icon\">⏳</span>\n          Validating API key...\n        </div>\n        <div\n          v-else-if=\"apiConnection.isConnected\"\n          class=\"status-message status-success\"\n        >\n          <span class=\"status-icon\">✅</span>\n          API key validated successfully\n        </div>\n        <div\n          v-else-if=\"apiConnection.hasError\"\n          class=\"status-message status-error\"\n        >\n          <span class=\"status-icon\">❌</span>\n          {{ apiConnection.error }}\n          <button class=\"btn-link\" @click=\"apiConnection.retry\">Retry</button>\n        </div>\n\n        <small class=\"help-text\">\n          Get your API key from the Govee Home app → Settings → About Us → Apply\n          for API Key\n        </small>\n      </div>\n    </section>\n\n    <section class=\"config-section diagnostics-section\">\n      <h2>Connectivity Diagnostics</h2>\n\n      <div v-if=\"transportHealth.length\" class=\"transport-health\">\n        <ul>\n          <li v-for=\"health in transportHealth\" :key=\"health.kind\">\n            <span class=\"transport-label\">{{ health.label }}</span>\n            <span\n              class=\"transport-indicator\"\n              :class=\"{ healthy: health.isHealthy, unhealthy: !health.isHealthy }\"\n            >\n              {{ health.isHealthy ? \"Available\" : \"Unavailable\" }}\n              <span v-if=\"health.latencyMs !== undefined\">\n                • {{ health.latencyMs }} ms\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n\n      <DiagnosticsPanel\n        :snapshot=\"telemetrySnapshot\"\n        @refresh=\"refreshDiagnostics\"\n        @reset=\"resetTelemetry\"\n      />\n    </section>\n\n    <!-- Light Selection Section -->\n    <section class=\"config-section\" data-testid=\"light-selection-section\">\n      <h2>Light Selection</h2>\n\n      <!-- Fetch Lights Button -->\n      <div v-if=\"lightDiscovery.isIdle\" class=\"form-group\">\n        <button\n          class=\"btn btn-primary\"\n          :disabled=\"!apiConnection.isConnected\"\n          @click=\"lightDiscovery.fetchLights\"\n        >\n          Discover Lights\n        </button>\n        <small class=\"help-text\">\n          Connect your API key first, then discover available lights\n        </small>\n      </div>\n\n      <!-- Loading State -->\n      <div\n        v-else-if=\"lightDiscovery.isFetchingLights\"\n        class=\"status-message status-loading\"\n      >\n        <span class=\"status-icon\">⏳</span>\n        Discovering lights...\n      </div>\n\n      <!-- Error State -->\n      <div\n        v-else-if=\"lightDiscovery.hasError\"\n        class=\"status-message status-error\"\n      >\n        <span class=\"status-icon\">❌</span>\n        {{ lightDiscovery.error }}\n        <button class=\"btn-link\" @click=\"lightDiscovery.retryFetch\">\n          Retry\n        </button>\n      </div>\n\n      <!-- Light Selection -->\n      <div v-else-if=\"lightDiscovery.isReady\" class=\"form-group\">\n        <!-- Search -->\n        <div v-if=\"lightDiscovery.hasLights\" class=\"search-group\">\n          <input\n            v-model=\"searchQuery\"\n            type=\"text\"\n            class=\"form-input\"\n            placeholder=\"Search lights...\"\n            @input=\"lightDiscovery.searchLights(searchQuery)\"\n          />\n          <button v-if=\"searchQuery\" class=\"btn-clear\" @click=\"clearSearch\">\n            ✕\n          </button>\n        </div>\n\n        <!-- Light Dropdown -->\n        <div class=\"form-group\">\n          <label for=\"lightSelect\">Light</label>\n          <select\n            id=\"lightSelect\"\n            v-model=\"selectedLight\"\n            class=\"form-select\"\n            :disabled=\"!lightDiscovery.hasFilteredLights\"\n          >\n            <option value=\"\" disabled>\n              {{\n                lightDiscovery.hasFilteredLights\n                  ? \"Select a light...\"\n                  : \"No lights found\"\n              }}\n            </option>\n            <option\n              v-for=\"light in lightDiscovery.filteredLights.value\"\n              :key=\"light.value\"\n              :value=\"light.value\"\n            >\n              {{ light.label }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Refresh Button -->\n        <button\n          class=\"btn btn-secondary\"\n          @click=\"lightDiscovery.refreshLights\"\n          :disabled=\"lightDiscovery.isFetchingLights\"\n        >\n          <span v-if=\"lightDiscovery.isFetchingLights\">Refreshing...</span>\n          <span v-else>Refresh Lights</span>\n        </button>\n      </div>\n    </section>\n\n    <!-- Control Mode Section -->\n    <section class=\"config-section\" data-testid=\"control-mode-section\">\n      <h2>Control Mode</h2>\n      <div class=\"form-group\">\n        <label for=\"controlMode\">Control Mode</label>\n        <select id=\"controlMode\" v-model=\"controlMode\" class=\"form-select\">\n          <option value=\"toggle\">Toggle On/Off</option>\n          <option value=\"on\">Turn On</option>\n          <option value=\"off\">Turn Off</option>\n          <option value=\"brightness\">Set Brightness</option>\n          <option value=\"color\">Set Color</option>\n          <option value=\"colorTemp\">Set Color Temperature</option>\n        </select>\n      </div>\n\n      <!-- Brightness Control -->\n      <div v-if=\"controlMode === 'brightness'\" class=\"form-group\">\n        <label for=\"brightness\">Brightness (%)</label>\n        <input\n          id=\"brightness\"\n          v-model.number=\"brightnessValue\"\n          type=\"range\"\n          min=\"1\"\n          max=\"100\"\n          class=\"form-range\"\n        />\n        <span class=\"range-value\">{{ brightnessValue }}%</span>\n      </div>\n\n      <!-- Color Control -->\n      <div v-if=\"controlMode === 'color'\" class=\"form-group\">\n        <label for=\"color\">Color</label>\n        <input\n          id=\"color\"\n          v-model=\"colorValue\"\n          type=\"color\"\n          class=\"form-color\"\n        />\n      </div>\n\n      <!-- Color Temperature Control -->\n      <div v-if=\"controlMode === 'colorTemp'\" class=\"form-group\">\n        <label for=\"colorTemp\">Color Temperature (K)</label>\n        <input\n          id=\"colorTemp\"\n          v-model.number=\"colorTempValue\"\n          type=\"range\"\n          min=\"2000\"\n          max=\"9000\"\n          step=\"100\"\n          class=\"form-range\"\n        />\n        <span class=\"range-value\">{{ colorTempValue }}K</span>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from \"vue\";\nimport type { ControlMode } from \"@shared/types\";\nimport { useApiConnection } from \"../composables/useApiConnection\";\nimport { useLightDiscovery } from \"../composables/useLightDiscovery\";\nimport { useLightControlSettings } from \"../composables/useSettings\";\nimport { useFeedbackHelpers } from \"../composables/useFeedback\";\nimport { websocketService } from \"../services/websocketService\";\nimport DiagnosticsPanel from \"../components/DiagnosticsPanel.vue\";\n\n// XState composables\nconst apiConnection = useApiConnection();\nconst lightDiscovery = useLightDiscovery();\n\n// Settings composable with persistence\nconst settingsManager = useLightControlSettings();\n\n// Feedback system for user notifications\nconst feedback = useFeedbackHelpers();\n\n// Local reactive state for UI\nconst searchQuery = ref<string>(\"\");\n\n// Computed values bound to settings\nconst localApiKey = computed({\n  get: () => settingsManager.settings.apiKey || \"\",\n  set: (value: string) =>\n    settingsManager.updateSetting(\"apiKey\", value || undefined),\n});\n\nconst selectedLight = computed({\n  get: () => {\n    const deviceId = settingsManager.settings.selectedDeviceId;\n    const model = settingsManager.settings.selectedModel;\n    return deviceId && model ? `${deviceId}|${model}` : \"\";\n  },\n  set: (value: string) => {\n    if (value) {\n      const [deviceId, model] = value.split(\"|\");\n      const lightName = lightDiscovery.filteredLights.value.find(\n        (l) => l.value === value,\n      )?.label;\n      settingsManager.updateSettings({\n        selectedDeviceId: deviceId,\n        selectedModel: model,\n        selectedLightName: lightName,\n      });\n    } else {\n      settingsManager.updateSettings({\n        selectedDeviceId: undefined,\n        selectedModel: undefined,\n        selectedLightName: undefined,\n      });\n    }\n  },\n});\n\nconst controlMode = computed({\n  get: () => settingsManager.settings.controlMode || \"toggle\",\n  set: (value: ControlMode) =>\n    settingsManager.updateSetting(\"controlMode\", value),\n});\n\nconst brightnessValue = computed({\n  get: () => settingsManager.settings.brightnessValue || 100,\n  set: (value: number) =>\n    settingsManager.updateSetting(\"brightnessValue\", value),\n});\n\nconst colorValue = computed({\n  get: () => settingsManager.settings.colorValue || \"#ffffff\",\n  set: (value: string) => settingsManager.updateSetting(\"colorValue\", value),\n});\n\nconst colorTempValue = computed({\n  get: () => settingsManager.settings.colorTempValue || 6500,\n  set: (value: number) =>\n    settingsManager.updateSetting(\"colorTempValue\", value),\n});\n\nconst transportHealth = ref<Array<{\n  kind: string;\n  label: string;\n  isHealthy: boolean;\n  latencyMs?: number;\n  lastChecked?: number;\n}>>([]);\n\nconst telemetrySnapshot = ref<any | null>(null);\n\n// Actions\nconst connectToApi = () => {\n  if (localApiKey.value) {\n    feedback.showInfo(\"Connecting to API\", \"Validating your API key...\");\n    apiConnection.connect(localApiKey.value);\n  }\n};\n\nconst clearSearch = () => {\n  searchQuery.value = \"\";\n  lightDiscovery.clearSearch();\n};\n\nconst refreshTransportHealth = () => {\n  websocketService.requestTransportHealth();\n};\n\nconst refreshTelemetry = () => {\n  websocketService.requestTelemetrySnapshot();\n};\n\nconst resetTelemetry = () => {\n  websocketService.resetTelemetry();\n};\n\nconst refreshDiagnostics = () => {\n  refreshTransportHealth();\n  refreshTelemetry();\n};\n\n// Watch for API connection changes to automatically fetch lights\nwatch(\n  () => apiConnection.isConnected.value,\n  (isConnected, wasConnected) => {\n    if (isConnected && !wasConnected) {\n      feedback.showSuccessToast(\n        \"API Connected\",\n        \"Successfully connected to Govee API\",\n      );\n      if (lightDiscovery.isIdle.value) {\n        lightDiscovery.fetchLights();\n      }\n      refreshTransportHealth();\n      refreshTelemetry();\n    }\n  },\n);\n\n// Watch for API connection errors\nwatch(\n  () => apiConnection.error.value,\n  (error) => {\n    if (error) {\n      feedback.showApiError({ message: error }, \"API Connection Failed\");\n    }\n  },\n);\n\n// Watch for light discovery success\nwatch(\n  () => lightDiscovery.isReady.value,\n  (isReady, wasReady) => {\n    if (isReady && !wasReady && lightDiscovery.hasLights.value) {\n      const lightCount = lightDiscovery.lights.value.length;\n      feedback.showSuccessToast(\n        \"Lights Discovered\",\n        `Found ${lightCount} light${lightCount !== 1 ? \"s\" : \"\"}`,\n      );\n    }\n  },\n);\n\n// Watch for light discovery errors\nwatch(\n  () => lightDiscovery.error.value,\n  (error) => {\n    if (error) {\n      feedback.showApiError({ message: error }, \"Light Discovery Failed\");\n    }\n  },\n);\n\n// Watch for API key changes in settings to update connection\nwatch(\n  () => settingsManager.settings.apiKey,\n  (newApiKey) => {\n    if (newApiKey && !apiConnection.isConnected.value) {\n      apiConnection.connect(newApiKey);\n    }\n  },\n);\n\n// Watch for settings save events\nwatch(\n  () => settingsManager.lastSaved,\n  (lastSaved) => {\n    if (lastSaved) {\n      feedback.showSuccessToast(\n        \"Settings Saved\",\n        \"Your configuration has been saved\",\n      );\n    }\n  },\n);\n\n// Initialize on mount\nonMounted(() => {\n  // Enable auto-save with 500ms delay for responsive UI\n  settingsManager.enableAutoSave(500);\n\n  // Load existing settings\n  settingsManager.loadSettings();\n\n  // If we have an API key in settings, connect automatically\n  if (settingsManager.settings.apiKey) {\n    apiConnection.connect(settingsManager.settings.apiKey);\n  }\n\n  const piHandler = (message: any) => {\n    if (message.payload?.event === \"transportHealth\") {\n      transportHealth.value = message.payload.transports ?? [];\n    }\n    if (message.payload?.event === \"telemetrySnapshot\") {\n      telemetrySnapshot.value = message.payload.snapshot ?? null;\n    }\n  };\n\n  websocketService.on(\"sendToPropertyInspector\", piHandler);\n\n  onUnmounted(() => {\n    websocketService.off(\"sendToPropertyInspector\", piHandler);\n  });\n});\n</script>\n\n<style scoped>\n.light-control-view {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.config-section {\n  padding: 16px;\n  border: 1px solid var(--sdpi-color-border, #333);\n  border-radius: 8px;\n  background-color: var(--sdpi-color-bg-secondary, #2d2d30);\n}\n\n.config-section h2 {\n  margin: 0 0 16px 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--sdpi-color-accent, #0099ff);\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.form-group:last-child {\n  margin-bottom: 0;\n}\n\n.form-group label {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sdpi-color-text, #cccccc);\n}\n\n.form-input,\n.form-select {\n  padding: 8px 12px;\n  border: 1px solid var(--sdpi-color-border, #333);\n  border-radius: 4px;\n  background-color: var(--sdpi-color-bg, #1e1e1e);\n  color: var(--sdpi-color-text, #cccccc);\n  font-size: 14px;\n}\n\n.form-input:focus,\n.form-select:focus {\n  outline: none;\n  border-color: var(--sdpi-color-accent, #0099ff);\n}\n\n.form-range {\n  width: 100%;\n  margin: 8px 0;\n}\n\n.form-color {\n  width: 60px;\n  height: 40px;\n  border: 1px solid var(--sdpi-color-border, #333);\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.range-value {\n  font-size: 12px;\n  color: var(--sdpi-color-text-secondary, #999);\n  align-self: flex-end;\n}\n\n.help-text {\n  font-size: 12px;\n  color: var(--sdpi-color-text-secondary, #999);\n  line-height: 1.4;\n}\n\n/* Button Styles */\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.btn-primary {\n  background-color: var(--sdpi-color-accent, #0099ff);\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background-color: var(--sdpi-color-accent-hover, #0077cc);\n}\n\n.btn-secondary {\n  background-color: var(--sdpi-color-bg-tertiary, #404040);\n  color: var(--sdpi-color-text, #cccccc);\n  border: 1px solid var(--sdpi-color-border, #333);\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background-color: var(--sdpi-color-bg-hover, #505050);\n}\n\n.btn-link {\n  background: none;\n  border: none;\n  color: var(--sdpi-color-accent, #0099ff);\n  cursor: pointer;\n  font-size: 12px;\n  text-decoration: underline;\n  padding: 0;\n  margin-left: 8px;\n}\n\n.btn-link:hover {\n  color: var(--sdpi-color-accent-hover, #0077cc);\n}\n\n/* Input Group */\n.input-group {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.input-group .form-input {\n  flex: 1;\n}\n\n/* Search Group */\n.search-group {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.btn-clear {\n  position: absolute;\n  right: 8px;\n  background: none;\n  border: none;\n  color: var(--sdpi-color-text-secondary, #999);\n  cursor: pointer;\n  font-size: 14px;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.btn-clear:hover {\n  color: var(--sdpi-color-text, #cccccc);\n}\n\n/* Status Messages */\n.status-message {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  margin: 8px 0;\n}\n\n.status-loading {\n  background-color: var(--sdpi-color-bg-info, #1a3b5c);\n  color: var(--sdpi-color-text-info, #79c7ff);\n  border: 1px solid var(--sdpi-color-border-info, #0099ff);\n}\n\n.status-success {\n  background-color: var(--sdpi-color-bg-success, #1a3b1a);\n  color: var(--sdpi-color-text-success, #7dd87d);\n  border: 1px solid var(--sdpi-color-border-success, #28a745);\n}\n\n.status-error {\n  background-color: var(--sdpi-color-bg-error, #3b1a1a);\n  color: var(--sdpi-color-text-error, #ff7979);\n  border: 1px solid var(--sdpi-color-border-error, #dc3545);\n}\n\n.status-icon {\n  font-size: 16px;\n  flex-shrink: 0;\n}\n\n.diagnostics-section {\n  display: grid;\n  gap: 12px;\n}\n\n.transport-health ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: grid;\n  gap: 8px;\n}\n\n.transport-label {\n  font-weight: 600;\n  color: var(--sdpi-color-text, #cccccc);\n}\n\n.transport-indicator {\n  font-size: 13px;\n  margin-left: 8px;\n}\n\n.transport-indicator.healthy {\n  color: var(--sdpi-color-success, #6dd400);\n}\n\n.transport-indicator.unhealthy {\n  color: var(--sdpi-color-danger, #ff4d4f);\n}\n</style>\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport LightControlView from \"./views/LightControlView.vue\";\nimport { initializePropertyInspector } from \"./utils/propertyInspectorInit\";\n\n// Initialize Property Inspector WebSocket connection\ninitializePropertyInspector();\n\n// Create and mount the Vue application for Light Control Property Inspector\nconst app = createApp(App);\n\n// Add the light control view as the main content\napp.component(\"main-view\", LightControlView);\n\n// Mount the app with the specific view\napp.mount(\"#app\");\n"],"names":["apiConnection","useApiConnection","lightDiscovery","useLightDiscovery","settingsManager","useLightControlSettings","feedback","useFeedbackHelpers","searchQuery","ref","localApiKey","computed","value","selectedLight","deviceId","model","lightName","l","controlMode","brightnessValue","colorValue","colorTempValue","transportHealth","telemetrySnapshot","connectToApi","clearSearch","refreshTransportHealth","websocketService","refreshTelemetry","resetTelemetry","refreshDiagnostics","watch","isConnected","wasConnected","error","isReady","wasReady","lightCount","newApiKey","lastSaved","onMounted","piHandler","message","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","$event","_unref","args","_hoisted_9","_hoisted_10","_hoisted_11","_createTextVNode","_toDisplayString","_hoisted_12","_hoisted_13","_Fragment","_renderList","health","_hoisted_14","_normalizeClass","_createVNode","DiagnosticsPanel","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_25","light","_hoisted_26","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","initializePropertyInspector","app","createApp","App","LightControlView"],"mappings":"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"}