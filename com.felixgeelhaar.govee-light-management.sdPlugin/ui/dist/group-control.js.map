{"version":3,"file":"group-control.js","sources":["../../../src/frontend/machines/groupManagementMachine.ts","../../../src/frontend/composables/useGroupManagement.ts","../../../src/frontend/views/GroupControlView.vue","../../../src/frontend/group-control.ts"],"sourcesContent":["import { setup, assign, fromPromise } from 'xstate'\r\nimport type { LightGroup, LightItem } from '@shared/types'\r\nimport { websocketService } from '../services/websocketService'\r\n\r\n/**\r\n * Context for the group management state machine\r\n */\r\nexport interface GroupManagementContext {\r\n  groups: LightGroup[]\r\n  currentGroup: LightGroup | null\r\n  availableLights: LightItem[]\r\n  selectedLights: string[]\r\n  error: string | null\r\n  isLoading: boolean\r\n}\r\n\r\n/**\r\n * Input for the group management machine\r\n */\r\nexport interface GroupManagementInput {\r\n  shouldFailSave?: boolean\r\n  shouldFailDelete?: boolean\r\n  shouldFailLoad?: boolean\r\n}\r\n\r\n/**\r\n * Events that can be sent to the group management machine\r\n */\r\nexport type GroupManagementEvent =\r\n  | { type: 'LOAD_GROUPS' }\r\n  | { type: 'CREATE_GROUP' }\r\n  | { type: 'EDIT_GROUP'; group: LightGroup }\r\n  | { type: 'SAVE_GROUP'; name: string; selectedLights: string[] }\r\n  | { type: 'DELETE_GROUP'; groupId: string }\r\n  | { type: 'CANCEL_EDIT' }\r\n  | { type: 'GROUPS_LOADED'; groups: LightGroup[] }\r\n  | { type: 'GROUP_SAVED'; group: LightGroup }\r\n  | { type: 'GROUP_DELETED'; groupId: string }\r\n  | { type: 'OPERATION_FAILED'; error: string }\r\n  | { type: 'SELECT_LIGHT'; lightId: string }\r\n  | { type: 'DESELECT_LIGHT'; lightId: string }\r\n\r\n/**\r\n * State machine for managing light groups\r\n * \r\n * States:\r\n * - idle: Initial state, groups not loaded\r\n * - loading: Loading groups from storage\r\n * - ready: Groups loaded, ready for operations\r\n * - editing: Creating or editing a group\r\n * - saving: Saving group changes\r\n * - deleting: Deleting a group\r\n * - error: Operation failed\r\n */\r\nexport const groupManagementMachine = setup({\r\n  types: {\r\n    context: {} as GroupManagementContext,\r\n    events: {} as GroupManagementEvent,\r\n    input: {} as GroupManagementInput,\r\n  },\r\n  actions: {\r\n    setGroups: assign({\r\n      groups: ({ event }) => {\r\n        if (event.type === 'GROUPS_LOADED') {\r\n          return event.groups\r\n        }\r\n        return []\r\n      },\r\n    }),\r\n    \r\n    setCurrentGroup: assign({\r\n      currentGroup: ({ event }) => {\r\n        if (event.type === 'EDIT_GROUP') {\r\n          return event.group\r\n        }\r\n        return null\r\n      },\r\n    }),\r\n    \r\n    clearCurrentGroup: assign({\r\n      currentGroup: null,\r\n      selectedLights: [],\r\n    }),\r\n    \r\n    selectLight: assign({\r\n      selectedLights: ({ context, event }) => {\r\n        if (event.type === 'SELECT_LIGHT') {\r\n          if (!context.selectedLights.includes(event.lightId)) {\r\n            return [...context.selectedLights, event.lightId]\r\n          }\r\n        }\r\n        return context.selectedLights\r\n      },\r\n    }),\r\n    \r\n    deselectLight: assign({\r\n      selectedLights: ({ context, event }) => {\r\n        if (event.type === 'DESELECT_LIGHT') {\r\n          return context.selectedLights.filter(id => id !== event.lightId)\r\n        }\r\n        return context.selectedLights\r\n      },\r\n    }),\r\n    \r\n    addOrUpdateGroup: assign({\r\n      groups: ({ context, event }) => {\r\n        if (event.type === 'GROUP_SAVED') {\r\n          const existingIndex = context.groups.findIndex(g => g.id === event.group.id)\r\n          if (existingIndex >= 0) {\r\n            // Update existing group\r\n            const newGroups = [...context.groups]\r\n            newGroups[existingIndex] = event.group\r\n            return newGroups\r\n          } else {\r\n            // Add new group\r\n            return [...context.groups, event.group]\r\n          }\r\n        }\r\n        return context.groups\r\n      },\r\n    }),\r\n    \r\n    removeGroup: assign({\r\n      groups: ({ context, event }) => {\r\n        if (event.type === 'GROUP_DELETED') {\r\n          return context.groups.filter(g => g.id !== event.groupId)\r\n        }\r\n        return context.groups\r\n      },\r\n    }),\r\n    \r\n    setError: assign({\r\n      error: ({ event }) => {\r\n        if (event.type === 'OPERATION_FAILED') {\r\n          return event.error\r\n        }\r\n        return null\r\n      },\r\n    }),\r\n    \r\n    clearError: assign({\r\n      error: null,\r\n    }),\r\n    \r\n    startLoading: assign({\r\n      isLoading: true,\r\n    }),\r\n    \r\n    stopLoading: assign({\r\n      isLoading: false,\r\n    }),\r\n  },\r\n  \r\n  actors: {\r\n    loadGroups: fromPromise(async ({ input }: { input: GroupManagementInput }) => {\r\n      // Production-ready WebSocket-based group loading\r\n      if (!websocketService.isConnected) {\r\n        throw new Error('WebSocket not connected to Stream Deck')\r\n      }\r\n      \r\n      return new Promise<LightGroup[]>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          websocketService.off('sendToPropertyInspector', responseHandler)\r\n          reject(new Error('Group loading timeout'))\r\n        }, 10000) // 10 second timeout\r\n        \r\n        const responseHandler = (message: any) => {\r\n          if (message.payload?.event === 'groupsReceived') {\r\n            clearTimeout(timeout)\r\n            websocketService.off('sendToPropertyInspector', responseHandler)\r\n            \r\n            if (message.payload.error) {\r\n              reject(new Error(message.payload.error))\r\n            } else {\r\n              resolve(message.payload.groups || [])\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Listen for response\r\n        websocketService.on('sendToPropertyInspector', responseHandler)\r\n        \r\n        // Send groups request\r\n        websocketService.requestGroups()\r\n      })\r\n    }),\r\n    \r\n    saveGroup: fromPromise(async ({ input }: { \r\n      input: GroupManagementInput & { \r\n        name: string\r\n        selectedLights: string[]\r\n        groupId?: string \r\n      } \r\n    }) => {\r\n      // Production-ready WebSocket-based group saving\r\n      if (!websocketService.isConnected) {\r\n        throw new Error('WebSocket not connected to Stream Deck')\r\n      }\r\n      \r\n      return new Promise<LightGroup>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          websocketService.off('sendToPropertyInspector', responseHandler)\r\n          reject(new Error('Group save timeout'))\r\n        }, 10000) // 10 second timeout\r\n        \r\n        const responseHandler = (message: any) => {\r\n          if (message.payload?.event === 'groupSaved') {\r\n            clearTimeout(timeout)\r\n            websocketService.off('sendToPropertyInspector', responseHandler)\r\n            \r\n            if (message.payload.error) {\r\n              reject(new Error(message.payload.error))\r\n            } else {\r\n              resolve(message.payload.group)\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Listen for response\r\n        websocketService.on('sendToPropertyInspector', responseHandler)\r\n        \r\n        // Send save request\r\n        websocketService.saveGroup({\r\n          name: input.name,\r\n          lightIds: input.selectedLights\r\n        })\r\n      })\r\n    }),\r\n    \r\n    deleteGroup: fromPromise(async ({ input }: { \r\n      input: GroupManagementInput & { groupId: string } \r\n    }) => {\r\n      // Production-ready WebSocket-based group deletion\r\n      if (!websocketService.isConnected) {\r\n        throw new Error('WebSocket not connected to Stream Deck')\r\n      }\r\n      \r\n      return new Promise<string>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          websocketService.off('sendToPropertyInspector', responseHandler)\r\n          reject(new Error('Group delete timeout'))\r\n        }, 10000) // 10 second timeout\r\n        \r\n        const responseHandler = (message: any) => {\r\n          if (message.payload?.event === 'groupDeleted') {\r\n            clearTimeout(timeout)\r\n            websocketService.off('sendToPropertyInspector', responseHandler)\r\n            \r\n            if (message.payload.error) {\r\n              reject(new Error(message.payload.error))\r\n            } else {\r\n              resolve(message.payload.groupId)\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Listen for response\r\n        websocketService.on('sendToPropertyInspector', responseHandler)\r\n        \r\n        // Send delete request\r\n        websocketService.deleteGroup(input.groupId)\r\n      })\r\n    }),\r\n  },\r\n}).createMachine({\r\n  id: 'groupManagement',\r\n  initial: 'idle',\r\n  context: ({ input }) => ({\r\n    groups: [],\r\n    currentGroup: null,\r\n    availableLights: [],\r\n    selectedLights: [],\r\n    error: null,\r\n    isLoading: false,\r\n  }),\r\n  \r\n  states: {\r\n    idle: {\r\n      on: {\r\n        LOAD_GROUPS: {\r\n          target: 'loading',\r\n        },\r\n      },\r\n    },\r\n    \r\n    loading: {\r\n      entry: ['startLoading', 'clearError'],\r\n      exit: 'stopLoading',\r\n      \r\n      invoke: {\r\n        src: 'loadGroups',\r\n        input: ({ self }) => self._parent?.input || {},\r\n        onDone: {\r\n          target: 'ready',\r\n          actions: assign({\r\n            groups: ({ event }) => event.output,\r\n          }),\r\n        },\r\n        onError: {\r\n          target: 'error',\r\n          actions: assign({\r\n            error: ({ event }) => event.error.message,\r\n          }),\r\n        },\r\n      },\r\n      \r\n      on: {\r\n        GROUPS_LOADED: {\r\n          target: 'ready',\r\n          actions: 'setGroups',\r\n        },\r\n        OPERATION_FAILED: {\r\n          target: 'error',\r\n          actions: 'setError',\r\n        },\r\n      },\r\n    },\r\n    \r\n    ready: {\r\n      on: {\r\n        CREATE_GROUP: {\r\n          target: 'editing',\r\n          actions: 'clearCurrentGroup',\r\n        },\r\n        EDIT_GROUP: {\r\n          target: 'editing',\r\n          actions: ['setCurrentGroup', assign({\r\n            selectedLights: ({ event }) => \r\n              event.type === 'EDIT_GROUP' ? event.group.lightIds : []\r\n          })],\r\n        },\r\n        DELETE_GROUP: {\r\n          target: 'deleting',\r\n        },\r\n        LOAD_GROUPS: {\r\n          target: 'loading',\r\n        },\r\n      },\r\n    },\r\n    \r\n    editing: {\r\n      on: {\r\n        SAVE_GROUP: {\r\n          target: 'saving',\r\n        },\r\n        CANCEL_EDIT: {\r\n          target: 'ready',\r\n          actions: 'clearCurrentGroup',\r\n        },\r\n        SELECT_LIGHT: {\r\n          actions: 'selectLight',\r\n        },\r\n        DESELECT_LIGHT: {\r\n          actions: 'deselectLight',\r\n        },\r\n      },\r\n    },\r\n    \r\n    saving: {\r\n      entry: ['startLoading', 'clearError'],\r\n      exit: 'stopLoading',\r\n      \r\n      invoke: {\r\n        src: 'saveGroup',\r\n        input: ({ context, event, self }) => {\r\n          const baseInput = self._parent?.input || {}\r\n          if (event.type === 'SAVE_GROUP') {\r\n            return {\r\n              ...baseInput,\r\n              name: event.name,\r\n              selectedLights: event.selectedLights,\r\n              groupId: context.currentGroup?.id,\r\n            }\r\n          }\r\n          return baseInput\r\n        },\r\n        onDone: {\r\n          target: 'ready',\r\n          actions: [\r\n            assign({\r\n              groups: ({ context, event }) => {\r\n                const savedGroup = event.output\r\n                const existingIndex = context.groups.findIndex(g => g.id === savedGroup.id)\r\n                if (existingIndex >= 0) {\r\n                  // Update existing group\r\n                  const newGroups = [...context.groups]\r\n                  newGroups[existingIndex] = savedGroup\r\n                  return newGroups\r\n                } else {\r\n                  // Add new group\r\n                  return [...context.groups, savedGroup]\r\n                }\r\n              },\r\n            }),\r\n            'clearCurrentGroup',\r\n          ],\r\n        },\r\n        onError: {\r\n          target: 'error',\r\n          actions: assign({\r\n            error: ({ event }) => event.error.message,\r\n          }),\r\n        },\r\n      },\r\n      \r\n      on: {\r\n        GROUP_SAVED: {\r\n          target: 'ready',\r\n          actions: ['addOrUpdateGroup', 'clearCurrentGroup'],\r\n        },\r\n        OPERATION_FAILED: {\r\n          target: 'error',\r\n          actions: 'setError',\r\n        },\r\n      },\r\n    },\r\n    \r\n    deleting: {\r\n      entry: ['startLoading', 'clearError'],\r\n      exit: 'stopLoading',\r\n      \r\n      invoke: {\r\n        src: 'deleteGroup',\r\n        input: ({ event, self }) => {\r\n          const baseInput = self._parent?.input || {}\r\n          if (event.type === 'DELETE_GROUP') {\r\n            return {\r\n              ...baseInput,\r\n              groupId: event.groupId,\r\n            }\r\n          }\r\n          return baseInput\r\n        },\r\n        onDone: {\r\n          target: 'ready',\r\n          actions: assign({\r\n            groups: ({ context, event }) => \r\n              context.groups.filter(g => g.id !== event.output)\r\n          }),\r\n        },\r\n        onError: {\r\n          target: 'error',\r\n          actions: assign({\r\n            error: ({ event }) => event.error.message,\r\n          }),\r\n        },\r\n      },\r\n      \r\n      on: {\r\n        GROUP_DELETED: {\r\n          target: 'ready',\r\n          actions: 'removeGroup',\r\n        },\r\n        OPERATION_FAILED: {\r\n          target: 'error',\r\n          actions: 'setError',\r\n        },\r\n      },\r\n    },\r\n    \r\n    error: {\r\n      on: {\r\n        LOAD_GROUPS: {\r\n          target: 'loading',\r\n          actions: 'clearError',\r\n        },\r\n        CREATE_GROUP: {\r\n          target: 'editing',\r\n          actions: ['clearError', 'clearCurrentGroup'],\r\n        },\r\n      },\r\n    },\r\n  },\r\n})","import { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { createActor, type ActorRefFrom } from 'xstate'\r\nimport { groupManagementMachine } from '../machines/groupManagementMachine'\r\nimport type { LightGroup, LightItem } from '@shared/types'\r\n\r\n/**\r\n * Vue composable for managing light groups state with XState\r\n */\r\nexport function useGroupManagement() {\r\n  // Create the XState actor\r\n  const actor = ref<ActorRefFrom<typeof groupManagementMachine> | null>(null)\r\n  \r\n  // Reactive state from the machine\r\n  const state = ref('idle')\r\n  const groups = ref<LightGroup[]>([])\r\n  const currentGroup = ref<LightGroup | null>(null)\r\n  const availableLights = ref<LightItem[]>([])\r\n  const selectedLights = ref<string[]>([])\r\n  const error = ref<string | null>(null)\r\n  const isLoading = ref(false)\r\n  \r\n  // Computed states for easier usage in templates\r\n  const isIdle = computed(() => state.value === 'idle')\r\n  const isLoadingGroups = computed(() => state.value === 'loading')\r\n  const isReady = computed(() => state.value === 'ready')\r\n  const isEditing = computed(() => state.value === 'editing')\r\n  const isSaving = computed(() => state.value === 'saving')\r\n  const isDeleting = computed(() => state.value === 'deleting')\r\n  const hasError = computed(() => state.value === 'error')\r\n  const hasGroups = computed(() => groups.value.length > 0)\r\n  const isCreatingNew = computed(() => isEditing.value && currentGroup.value === null)\r\n  const isEditingExisting = computed(() => isEditing.value && currentGroup.value !== null)\r\n  \r\n  // Initialize the actor and subscribe to state changes\r\n  onMounted(() => {\r\n    actor.value = createActor(groupManagementMachine)\r\n    \r\n    // Subscribe to state changes\r\n    actor.value.subscribe((snapshot) => {\r\n      state.value = snapshot.value as string\r\n      groups.value = snapshot.context.groups\r\n      currentGroup.value = snapshot.context.currentGroup\r\n      availableLights.value = snapshot.context.availableLights\r\n      selectedLights.value = snapshot.context.selectedLights\r\n      error.value = snapshot.context.error\r\n      isLoading.value = snapshot.context.isLoading\r\n    })\r\n    \r\n    actor.value.start()\r\n  })\r\n  \r\n  // Clean up on unmount\r\n  onUnmounted(() => {\r\n    if (actor.value) {\r\n      actor.value.stop()\r\n    }\r\n  })\r\n  \r\n  // Actions\r\n  const loadGroups = () => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'LOAD_GROUPS' })\r\n    }\r\n  }\r\n  \r\n  const createGroup = () => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'CREATE_GROUP' })\r\n    }\r\n  }\r\n  \r\n  const editGroup = (group: LightGroup) => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'EDIT_GROUP', group })\r\n    }\r\n  }\r\n  \r\n  const saveGroup = (name: string, lightIds: string[]) => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'SAVE_GROUP', name, selectedLights: lightIds })\r\n    }\r\n  }\r\n  \r\n  const deleteGroup = (groupId: string) => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'DELETE_GROUP', groupId })\r\n    }\r\n  }\r\n  \r\n  const cancelEdit = () => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'CANCEL_EDIT' })\r\n    }\r\n  }\r\n  \r\n  const selectLight = (lightId: string) => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'SELECT_LIGHT', lightId })\r\n    }\r\n  }\r\n  \r\n  const deselectLight = (lightId: string) => {\r\n    if (actor.value) {\r\n      actor.value.send({ type: 'DESELECT_LIGHT', lightId })\r\n    }\r\n  }\r\n  \r\n  const toggleLightSelection = (lightId: string) => {\r\n    if (selectedLights.value.includes(lightId)) {\r\n      deselectLight(lightId)\r\n    } else {\r\n      selectLight(lightId)\r\n    }\r\n  }\r\n  \r\n  const isLightSelected = (lightId: string) => {\r\n    return computed(() => selectedLights.value.includes(lightId))\r\n  }\r\n  \r\n  return {\r\n    // State\r\n    state: computed(() => state.value),\r\n    groups: computed(() => groups.value),\r\n    currentGroup: computed(() => currentGroup.value),\r\n    availableLights: computed(() => availableLights.value),\r\n    selectedLights: computed(() => selectedLights.value),\r\n    error: computed(() => error.value),\r\n    isLoading: computed(() => isLoading.value),\r\n    \r\n    // Computed convenience states\r\n    isIdle,\r\n    isLoadingGroups,\r\n    isReady,\r\n    isEditing,\r\n    isSaving,\r\n    isDeleting,\r\n    hasError,\r\n    hasGroups,\r\n    isCreatingNew,\r\n    isEditingExisting,\r\n    \r\n    // Actions\r\n    loadGroups,\r\n    createGroup,\r\n    editGroup,\r\n    saveGroup,\r\n    deleteGroup,\r\n    cancelEdit,\r\n    selectLight,\r\n    deselectLight,\r\n    toggleLightSelection,\r\n    isLightSelected,\r\n  }\r\n}","<template>\r\n  <div class=\"group-control-view\">\r\n    <!-- API Configuration Section -->\r\n    <section class=\"config-section\" data-testid=\"api-key-section\">\r\n      <h2>API Configuration</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"apiKey\">API Key</label>\r\n        <div class=\"input-group\">\r\n          <input\r\n            id=\"apiKey\"\r\n            v-model=\"localApiKey\"\r\n            type=\"password\"\r\n            class=\"form-input\"\r\n            placeholder=\"Enter your Govee API key\"\r\n            autocomplete=\"off\"\r\n            :disabled=\"apiConnection.isConnecting\"\r\n            @keyup.enter=\"connectToApi\"\r\n          />\r\n          <button\r\n            v-if=\"apiConnection.isDisconnected || apiConnection.hasError\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"!localApiKey || apiConnection.isConnecting\"\r\n            @click=\"connectToApi\"\r\n          >\r\n            <span v-if=\"apiConnection.isConnecting\">Connecting...</span>\r\n            <span v-else>Connect</span>\r\n          </button>\r\n          <button\r\n            v-else-if=\"apiConnection.isConnected\"\r\n            class=\"btn btn-secondary\"\r\n            @click=\"apiConnection.disconnect\"\r\n          >\r\n            Disconnect\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Connection Status -->\r\n        <div v-if=\"apiConnection.isConnecting\" class=\"status-message status-loading\">\r\n          <span class=\"status-icon\">⏳</span>\r\n          Validating API key...\r\n        </div>\r\n        <div v-else-if=\"apiConnection.isConnected\" class=\"status-message status-success\">\r\n          <span class=\"status-icon\">✅</span>\r\n          API key validated successfully\r\n        </div>\r\n        <div v-else-if=\"apiConnection.hasError\" class=\"status-message status-error\">\r\n          <span class=\"status-icon\">❌</span>\r\n          {{ apiConnection.error }}\r\n          <button class=\"btn-link\" @click=\"apiConnection.retry\">Retry</button>\r\n        </div>\r\n        \r\n        <small class=\"help-text\">\r\n          Get your API key from the Govee Home app → Settings → About Us → Apply for API Key\r\n        </small>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Group Management Section -->\r\n    <section class=\"config-section\" data-testid=\"group-management-section\">\r\n      <h2>Group Management</h2>\r\n      \r\n      <!-- Loading Groups -->\r\n      <div v-if=\"groupManagement.isIdle\" class=\"form-group\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          :disabled=\"!apiConnection.isConnected\"\r\n          @click=\"groupManagement.loadGroups\"\r\n        >\r\n          Load Groups\r\n        </button>\r\n        <small class=\"help-text\">\r\n          Connect your API key first, then load your light groups\r\n        </small>\r\n      </div>\r\n      \r\n      <!-- Loading State -->\r\n      <div v-else-if=\"groupManagement.isLoadingGroups\" class=\"status-message status-loading\">\r\n        <span class=\"status-icon\">⏳</span>\r\n        Loading groups...\r\n      </div>\r\n      \r\n      <!-- Error State -->\r\n      <div v-else-if=\"groupManagement.hasError\" class=\"status-message status-error\">\r\n        <span class=\"status-icon\">❌</span>\r\n        {{ groupManagement.error }}\r\n        <button class=\"btn-link\" @click=\"groupManagement.loadGroups\">Retry</button>\r\n      </div>\r\n      \r\n      <!-- Ready State - Group Selection -->\r\n      <div v-else-if=\"groupManagement.isReady\" class=\"form-group\">\r\n        <div class=\"form-group\">\r\n          <label for=\"groupSelect\">Light Group</label>\r\n          <select\r\n            id=\"groupSelect\"\r\n            v-model=\"selectedGroup\"\r\n            class=\"form-select\"\r\n            :disabled=\"!groupManagement.hasGroups\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              {{ groupManagement.hasGroups ? 'Select a light group...' : 'No groups found' }}\r\n            </option>\r\n            <option\r\n              v-for=\"group in groupManagement.groups\"\r\n              :key=\"group.id\"\r\n              :value=\"group.id\"\r\n            >\r\n              {{ group.name }} ({{ group.lightIds.length }} lights)\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"group-actions\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            :disabled=\"!selectedGroup || groupManagement.isLoading\"\r\n            @click=\"editGroup\"\r\n          >\r\n            ✏️ Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-danger\"\r\n            :disabled=\"!selectedGroup || groupManagement.isLoading\"\r\n            @click=\"deleteGroup\"\r\n          >\r\n            <span v-if=\"groupManagement.isDeleting\">Deleting...</span>\r\n            <span v-else>🗑️ Delete</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"groupManagement.isLoading\"\r\n            @click=\"createNewGroup\"\r\n          >\r\n            + Create New Group\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Group Creation/Edit Form -->\r\n    <section\r\n      v-if=\"showCreateForm || showEditForm\"\r\n      class=\"config-section\"\r\n      data-testid=\"group-creation-form\"\r\n    >\r\n      <h2>{{ showEditForm ? 'Edit Group' : 'Create New Group' }}</h2>\r\n      \r\n      <!-- Saving State -->\r\n      <div v-if=\"groupManagement.isSaving\" class=\"status-message status-loading\">\r\n        <span class=\"status-icon\">⏳</span>\r\n        {{ showEditForm ? 'Updating group...' : 'Creating group...' }}\r\n      </div>\r\n      \r\n      <div v-else>\r\n        <div class=\"form-group\">\r\n          <label for=\"groupName\">Group Name</label>\r\n          <input\r\n            id=\"groupName\"\r\n            v-model=\"groupName\"\r\n            type=\"text\"\r\n            class=\"form-input\"\r\n            placeholder=\"Enter group name\"\r\n            :disabled=\"groupManagement.isLoading\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Select Lights</label>\r\n          \r\n          <!-- Lights not loaded yet -->\r\n          <div v-if=\"lightDiscovery.isIdle\" class=\"status-message status-loading\">\r\n            <span class=\"status-icon\">⏳</span>\r\n            Loading available lights...\r\n          </div>\r\n          \r\n          <!-- Lights loading -->\r\n          <div v-else-if=\"lightDiscovery.isFetchingLights\" class=\"status-message status-loading\">\r\n            <span class=\"status-icon\">⏳</span>\r\n            Discovering lights...\r\n          </div>\r\n          \r\n          <!-- Light discovery error -->\r\n          <div v-else-if=\"lightDiscovery.hasError\" class=\"status-message status-error\">\r\n            <span class=\"status-icon\">❌</span>\r\n            {{ lightDiscovery.error }}\r\n            <button class=\"btn-link\" @click=\"lightDiscovery.retryFetch\">Retry</button>\r\n          </div>\r\n          \r\n          <!-- Light selection -->\r\n          <div v-else-if=\"lightDiscovery.isReady && lightDiscovery.hasLights\" class=\"light-selection\">\r\n            <div\r\n              v-for=\"light in lightDiscovery.lights\"\r\n              :key=\"light.value\"\r\n              class=\"light-checkbox\"\r\n            >\r\n              <input\r\n                :id=\"`light-${light.value}`\"\r\n                :checked=\"isLightSelected(light.value)\"\r\n                type=\"checkbox\"\r\n                class=\"checkbox\"\r\n                @change=\"toggleLightSelection(light.value)\"\r\n              />\r\n              <label :for=\"`light-${light.value}`\" class=\"checkbox-label\">\r\n                {{ light.label }}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- No lights found -->\r\n          <div v-else class=\"status-message status-error\">\r\n            <span class=\"status-icon\">ℹ️</span>\r\n            No lights available. Make sure your API key is connected and lights are discoverable.\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            :disabled=\"groupManagement.isLoading\"\r\n            @click=\"cancelGroupForm\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"!groupName || selectedLights.length === 0 || groupManagement.isLoading\"\r\n            @click=\"saveGroup\"\r\n          >\r\n            {{ showEditForm ? 'Update Group' : 'Create Group' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Control Mode Section -->\r\n    <section class=\"config-section\" data-testid=\"control-mode-section\">\r\n      <h2>Control Mode</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"controlMode\">Control Mode</label>\r\n        <select\r\n          id=\"controlMode\"\r\n          v-model=\"controlMode\"\r\n          class=\"form-select\"\r\n        >\r\n          <option value=\"toggle\">Toggle On/Off</option>\r\n          <option value=\"on\">Turn On</option>\r\n          <option value=\"off\">Turn Off</option>\r\n          <option value=\"brightness\">Set Brightness</option>\r\n          <option value=\"color\">Set Color</option>\r\n          <option value=\"colorTemp\">Set Color Temperature</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Dynamic control inputs (same as LightControlView) -->\r\n      <div v-if=\"controlMode === 'brightness'\" class=\"form-group\">\r\n        <label for=\"brightness\">Brightness (%)</label>\r\n        <input\r\n          id=\"brightness\"\r\n          v-model.number=\"brightnessValue\"\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"100\"\r\n          class=\"form-range\"\r\n        />\r\n        <span class=\"range-value\">{{ brightnessValue }}%</span>\r\n      </div>\r\n\r\n      <div v-if=\"controlMode === 'color'\" class=\"form-group\">\r\n        <label for=\"color\">Color</label>\r\n        <input\r\n          id=\"color\"\r\n          v-model=\"colorValue\"\r\n          type=\"color\"\r\n          class=\"form-color\"\r\n        />\r\n      </div>\r\n\r\n      <div v-if=\"controlMode === 'colorTemp'\" class=\"form-group\">\r\n        <label for=\"colorTemp\">Color Temperature (K)</label>\r\n        <input\r\n          id=\"colorTemp\"\r\n          v-model.number=\"colorTempValue\"\r\n          type=\"range\"\r\n          min=\"2000\"\r\n          max=\"9000\"\r\n          step=\"100\"\r\n          class=\"form-range\"\r\n        />\r\n        <span class=\"range-value\">{{ colorTempValue }}K</span>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted } from 'vue'\r\nimport type { GroupControlSettings, ControlMode, LightGroup } from '@shared/types'\r\nimport { useApiConnection } from '../composables/useApiConnection'\r\nimport { useLightDiscovery } from '../composables/useLightDiscovery'\r\nimport { useGroupManagement } from '../composables/useGroupManagement'\r\n\r\n// XState composables\r\nconst apiConnection = useApiConnection()\r\nconst lightDiscovery = useLightDiscovery()\r\nconst groupManagement = useGroupManagement()\r\n\r\n// Local reactive state\r\nconst localApiKey = ref<string>('')\r\nconst selectedGroup = ref<string>('')\r\nconst controlMode = ref<ControlMode>('toggle')\r\nconst brightnessValue = ref<number>(100)\r\nconst colorValue = ref<string>('#ffffff')\r\nconst colorTempValue = ref<number>(6500)\r\n\r\n// Group form state\r\nconst groupName = ref<string>('')\r\n\r\n// Computed state helpers\r\nconst showCreateForm = computed(() => groupManagement.isCreatingNew.value)\r\nconst showEditForm = computed(() => groupManagement.isEditingExisting.value)\r\nconst selectedLights = computed(() => groupManagement.selectedLights.value)\r\n\r\n// Actions\r\nconst connectToApi = () => {\r\n  if (localApiKey.value) {\r\n    apiConnection.connect(localApiKey.value)\r\n  }\r\n}\r\n\r\nconst editGroup = () => {\r\n  const group = groupManagement.groups.value.find(g => g.id === selectedGroup.value)\r\n  if (group) {\r\n    groupManagement.editGroup(group)\r\n    groupName.value = group.name\r\n  }\r\n}\r\n\r\nconst deleteGroup = () => {\r\n  if (selectedGroup.value) {\r\n    const confirmDelete = confirm('Are you sure you want to delete this group?')\r\n    if (confirmDelete) {\r\n      groupManagement.deleteGroup(selectedGroup.value)\r\n      selectedGroup.value = ''\r\n    }\r\n  }\r\n}\r\n\r\nconst saveGroup = () => {\r\n  if (groupName.value && selectedLights.value.length > 0) {\r\n    groupManagement.saveGroup(groupName.value, selectedLights.value)\r\n    groupName.value = ''\r\n  }\r\n}\r\n\r\nconst cancelGroupForm = () => {\r\n  groupManagement.cancelEdit()\r\n  groupName.value = ''\r\n}\r\n\r\nconst createNewGroup = () => {\r\n  groupManagement.createGroup()\r\n  groupName.value = ''\r\n}\r\n\r\n// Light selection methods for form\r\nconst toggleLightSelection = (lightId: string) => {\r\n  groupManagement.toggleLightSelection(lightId)\r\n}\r\n\r\nconst isLightSelected = (lightId: string) => {\r\n  return groupManagement.isLightSelected(lightId).value\r\n}\r\n\r\n// Watch for API connection changes to load groups and lights\r\nwatch(\r\n  () => apiConnection.isConnected.value,\r\n  (isConnected) => {\r\n    if (isConnected) {\r\n      if (lightDiscovery.isIdle.value) {\r\n        lightDiscovery.fetchLights()\r\n      }\r\n      if (groupManagement.isIdle.value) {\r\n        groupManagement.loadGroups()\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\n// Initialize on mount\r\nonMounted(() => {\r\n  if (apiConnection.isConnected.value) {\r\n    if (groupManagement.isIdle.value) {\r\n      groupManagement.loadGroups()\r\n    }\r\n  }\r\n})\r\n\r\n// Computed settings object for Stream Deck integration\r\nconst settings = computed<GroupControlSettings>(() => ({\r\n  apiKey: apiConnection.apiKey.value || undefined,\r\n  selectedGroupId: selectedGroup.value || undefined,\r\n  controlMode: controlMode.value,\r\n  brightnessValue: controlMode.value === 'brightness' ? brightnessValue.value : undefined,\r\n  colorValue: controlMode.value === 'color' ? colorValue.value : undefined,\r\n  colorTempValue: controlMode.value === 'colorTemp' ? colorTempValue.value : undefined,\r\n}))\r\n\r\n// TODO: Implement WebSocket communication with Stream Deck plugin\r\n// TODO: Implement settings persistence and restoration\r\n</script>\r\n\r\n<style scoped>\r\n.group-control-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n\r\n.config-section {\r\n  padding: 16px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 8px;\r\n  background-color: var(--sdpi-color-bg-secondary, #2d2d30);\r\n}\r\n\r\n.config-section h2 {\r\n  margin: 0 0 16px 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: var(--sdpi-color-accent, #0099ff);\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.form-group label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: var(--sdpi-color-text, #cccccc);\r\n}\r\n\r\n.form-input,\r\n.form-select {\r\n  padding: 8px 12px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 4px;\r\n  background-color: var(--sdpi-color-bg, #1e1e1e);\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  font-size: 14px;\r\n}\r\n\r\n.form-input:focus,\r\n.form-select:focus {\r\n  outline: none;\r\n  border-color: var(--sdpi-color-accent, #0099ff);\r\n}\r\n\r\n.group-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 16px;\r\n}\r\n\r\n.btn {\r\n  padding: 8px 16px;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--sdpi-color-accent, #0099ff);\r\n  color: white;\r\n  border-color: var(--sdpi-color-accent, #0099ff);\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: #0077cc;\r\n  border-color: #0077cc;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: transparent;\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  border-color: var(--sdpi-color-border, #333);\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: var(--sdpi-color-bg, #1e1e1e);\r\n}\r\n\r\n.btn-danger {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border-color: #dc3545;\r\n}\r\n\r\n.btn-danger:hover:not(:disabled) {\r\n  background-color: #c82333;\r\n  border-color: #c82333;\r\n}\r\n\r\n.light-selection {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 4px;\r\n  background-color: var(--sdpi-color-bg, #1e1e1e);\r\n}\r\n\r\n.light-checkbox {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.checkbox {\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n\r\n.checkbox-label {\r\n  font-size: 14px;\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  cursor: pointer;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: flex-end;\r\n  margin-top: 16px;\r\n}\r\n\r\n.form-range {\r\n  width: 100%;\r\n  margin: 8px 0;\r\n}\r\n\r\n.form-color {\r\n  width: 60px;\r\n  height: 40px;\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.range-value {\r\n  font-size: 12px;\r\n  color: var(--sdpi-color-text-secondary, #999);\r\n  align-self: flex-end;\r\n}\r\n\r\n.help-text {\r\n  font-size: 12px;\r\n  color: var(--sdpi-color-text-secondary, #999);\r\n  line-height: 1.4;\r\n}\r\n\r\n/* Button Styles */\r\n.btn {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--sdpi-color-accent, #0099ff);\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: var(--sdpi-color-accent-hover, #0077cc);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: var(--sdpi-color-bg-tertiary, #404040);\r\n  color: var(--sdpi-color-text, #cccccc);\r\n  border: 1px solid var(--sdpi-color-border, #333);\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: var(--sdpi-color-bg-hover, #505050);\r\n}\r\n\r\n.btn-link {\r\n  background: none;\r\n  border: none;\r\n  color: var(--sdpi-color-accent, #0099ff);\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n  padding: 0;\r\n  margin-left: 8px;\r\n}\r\n\r\n.btn-link:hover {\r\n  color: var(--sdpi-color-accent-hover, #0077cc);\r\n}\r\n\r\n/* Input Group */\r\n.input-group {\r\n  display: flex;\r\n  gap: 8px;\r\n  align-items: center;\r\n}\r\n\r\n.input-group .form-input {\r\n  flex: 1;\r\n}\r\n\r\n/* Status Messages */\r\n.status-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  margin: 8px 0;\r\n}\r\n\r\n.status-loading {\r\n  background-color: var(--sdpi-color-bg-info, #1a3b5c);\r\n  color: var(--sdpi-color-text-info, #79c7ff);\r\n  border: 1px solid var(--sdpi-color-border-info, #0099ff);\r\n}\r\n\r\n.status-success {\r\n  background-color: var(--sdpi-color-bg-success, #1a3b1a);\r\n  color: var(--sdpi-color-text-success, #7dd87d);\r\n  border: 1px solid var(--sdpi-color-border-success, #28a745);\r\n}\r\n\r\n.status-error {\r\n  background-color: var(--sdpi-color-bg-error, #3b1a1a);\r\n  color: var(--sdpi-color-text-error, #ff7979);\r\n  border: 1px solid var(--sdpi-color-border-error, #dc3545);\r\n}\r\n\r\n.status-icon {\r\n  font-size: 16px;\r\n  flex-shrink: 0;\r\n}\r\n</style>","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport GroupControlView from './views/GroupControlView.vue'\r\nimport { initializePropertyInspector } from './utils/propertyInspectorInit'\r\n\r\n// Initialize Property Inspector WebSocket connection\r\ninitializePropertyInspector()\r\n\r\n// Create and mount the Vue application for Group Control Property Inspector\r\nconst app = createApp(App)\r\n\r\n// Add the group control view as the main content\r\napp.component('main-view', GroupControlView)\r\n\r\n// Mount the app with the specific view\r\napp.mount('#app')"],"names":["groupManagementMachine","setup","assign","event","context","id","existingIndex","g","newGroups","fromPromise","input","websocketService","resolve","reject","timeout","responseHandler","message","self","baseInput","savedGroup","useGroupManagement","actor","ref","state","groups","currentGroup","availableLights","selectedLights","error","isLoading","isIdle","computed","isLoadingGroups","isReady","isEditing","isSaving","isDeleting","hasError","hasGroups","isCreatingNew","isEditingExisting","onMounted","createActor","snapshot","onUnmounted","loadGroups","createGroup","editGroup","group","saveGroup","name","lightIds","deleteGroup","groupId","cancelEdit","selectLight","lightId","deselectLight","toggleLightSelection","isLightSelected","apiConnection","useApiConnection","lightDiscovery","useLightDiscovery","groupManagement","localApiKey","selectedGroup","controlMode","brightnessValue","colorValue","colorTempValue","groupName","showCreateForm","showEditForm","connectToApi","cancelGroupForm","createNewGroup","watch","isConnected","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","$event","_unref","args","_hoisted_9","_hoisted_10","_hoisted_11","_createTextVNode","_toDisplayString","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_20","_Fragment","_renderList","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","light","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","initializePropertyInspector","app","createApp","App","GroupControlView"],"mappings":"oQAsDO,MAAMA,GAAyBC,EAAM,CAM1C,QAAS,CACP,UAAWC,EAAO,CAChB,OAAQ,CAAC,CAAE,MAAAC,KACLA,EAAM,OAAS,gBACVA,EAAM,OAER,CAAA,CACT,CACD,EAED,gBAAiBD,EAAO,CACtB,aAAc,CAAC,CAAE,MAAAC,KACXA,EAAM,OAAS,aACVA,EAAM,MAER,IACT,CACD,EAED,kBAAmBD,EAAO,CACxB,aAAc,KACd,eAAgB,CAAA,CAAC,CAClB,EAED,YAAaA,EAAO,CAClB,eAAgB,CAAC,CAAE,QAAAE,EAAS,MAAAD,KACtBA,EAAM,OAAS,gBACb,CAACC,EAAQ,eAAe,SAASD,EAAM,OAAO,EACzC,CAAC,GAAGC,EAAQ,eAAgBD,EAAM,OAAO,EAG7CC,EAAQ,cACjB,CACD,EAED,cAAeF,EAAO,CACpB,eAAgB,CAAC,CAAE,QAAAE,EAAS,MAAAD,KACtBA,EAAM,OAAS,iBACVC,EAAQ,eAAe,OAAOC,GAAMA,IAAOF,EAAM,OAAO,EAE1DC,EAAQ,cACjB,CACD,EAED,iBAAkBF,EAAO,CACvB,OAAQ,CAAC,CAAE,QAAAE,EAAS,MAAAD,KAAY,CAC9B,GAAIA,EAAM,OAAS,cAAe,CAChC,MAAMG,EAAgBF,EAAQ,OAAO,aAAeG,EAAE,KAAOJ,EAAM,MAAM,EAAE,EAC3E,GAAIG,GAAiB,EAAG,CAEtB,MAAME,EAAY,CAAC,GAAGJ,EAAQ,MAAM,EACpC,OAAAI,EAAUF,CAAa,EAAIH,EAAM,MAC1BK,CACT,KAEE,OAAO,CAAC,GAAGJ,EAAQ,OAAQD,EAAM,KAAK,CAE1C,CACA,OAAOC,EAAQ,MACjB,CAAA,CACD,EAED,YAAaF,EAAO,CAClB,OAAQ,CAAC,CAAE,QAAAE,EAAS,MAAAD,KACdA,EAAM,OAAS,gBACVC,EAAQ,OAAO,UAAYG,EAAE,KAAOJ,EAAM,OAAO,EAEnDC,EAAQ,MACjB,CACD,EAED,SAAUF,EAAO,CACf,MAAO,CAAC,CAAE,MAAAC,KACJA,EAAM,OAAS,mBACVA,EAAM,MAER,IACT,CACD,EAED,WAAYD,EAAO,CACjB,MAAO,IAAA,CACR,EAED,aAAcA,EAAO,CACnB,UAAW,EAAA,CACZ,EAED,YAAaA,EAAO,CAClB,UAAW,EAAA,CACZ,CAAA,EAGH,OAAQ,CACN,WAAYO,EAAY,MAAO,CAAE,MAAAC,KAA6C,CAE5E,GAAI,CAACC,EAAiB,YACpB,MAAM,IAAI,MAAM,wCAAwC,EAG1D,OAAO,IAAI,QAAsB,CAACC,EAASC,IAAW,CACpD,MAAMC,EAAU,WAAW,IAAM,CAC/BH,EAAiB,IAAI,0BAA2BI,CAAe,EAC/DF,EAAO,IAAI,MAAM,uBAAuB,CAAC,CAC3C,EAAG,GAAK,EAEFE,EAAmBC,GAAiB,CACpCA,EAAQ,SAAS,QAAU,mBAC7B,aAAaF,CAAO,EACpBH,EAAiB,IAAI,0BAA2BI,CAAe,EAE3DC,EAAQ,QAAQ,MAClBH,EAAO,IAAI,MAAMG,EAAQ,QAAQ,KAAK,CAAC,EAEvCJ,EAAQI,EAAQ,QAAQ,QAAU,CAAA,CAAE,EAG1C,EAGAL,EAAiB,GAAG,0BAA2BI,CAAe,EAG9DJ,EAAiB,cAAA,CACnB,CAAC,CACH,CAAC,EAED,UAAWF,EAAY,MAAO,CAAE,MAAAC,KAM1B,CAEJ,GAAI,CAACC,EAAiB,YACpB,MAAM,IAAI,MAAM,wCAAwC,EAG1D,OAAO,IAAI,QAAoB,CAACC,EAASC,IAAW,CAClD,MAAMC,EAAU,WAAW,IAAM,CAC/BH,EAAiB,IAAI,0BAA2BI,CAAe,EAC/DF,EAAO,IAAI,MAAM,oBAAoB,CAAC,CACxC,EAAG,GAAK,EAEFE,EAAmBC,GAAiB,CACpCA,EAAQ,SAAS,QAAU,eAC7B,aAAaF,CAAO,EACpBH,EAAiB,IAAI,0BAA2BI,CAAe,EAE3DC,EAAQ,QAAQ,MAClBH,EAAO,IAAI,MAAMG,EAAQ,QAAQ,KAAK,CAAC,EAEvCJ,EAAQI,EAAQ,QAAQ,KAAK,EAGnC,EAGAL,EAAiB,GAAG,0BAA2BI,CAAe,EAG9DJ,EAAiB,UAAU,CACzB,KAAMD,EAAM,KACZ,SAAUA,EAAM,cAAA,CACjB,CACH,CAAC,CACH,CAAC,EAED,YAAaD,EAAY,MAAO,CAAE,MAAAC,KAE5B,CAEJ,GAAI,CAACC,EAAiB,YACpB,MAAM,IAAI,MAAM,wCAAwC,EAG1D,OAAO,IAAI,QAAgB,CAACC,EAASC,IAAW,CAC9C,MAAMC,EAAU,WAAW,IAAM,CAC/BH,EAAiB,IAAI,0BAA2BI,CAAe,EAC/DF,EAAO,IAAI,MAAM,sBAAsB,CAAC,CAC1C,EAAG,GAAK,EAEFE,EAAmBC,GAAiB,CACpCA,EAAQ,SAAS,QAAU,iBAC7B,aAAaF,CAAO,EACpBH,EAAiB,IAAI,0BAA2BI,CAAe,EAE3DC,EAAQ,QAAQ,MAClBH,EAAO,IAAI,MAAMG,EAAQ,QAAQ,KAAK,CAAC,EAEvCJ,EAAQI,EAAQ,QAAQ,OAAO,EAGrC,EAGAL,EAAiB,GAAG,0BAA2BI,CAAe,EAG9DJ,EAAiB,YAAYD,EAAM,OAAO,CAC5C,CAAC,CACH,CAAC,CAAA,CAEL,CAAC,EAAE,cAAc,CACf,GAAI,kBACJ,QAAS,OACT,QAAS,CAAC,CAAE,MAAAA,MAAa,CACvB,OAAQ,CAAA,EACR,aAAc,KACd,gBAAiB,CAAA,EACjB,eAAgB,CAAA,EAChB,MAAO,KACP,UAAW,EAAA,GAGb,OAAQ,CACN,KAAM,CACJ,GAAI,CACF,YAAa,CACX,OAAQ,SAAA,CACV,CACF,EAGF,QAAS,CACP,MAAO,CAAC,eAAgB,YAAY,EACpC,KAAM,cAEN,OAAQ,CACN,IAAK,aACL,MAAO,CAAC,CAAE,KAAAO,CAAA,IAAWA,EAAK,SAAS,OAAS,CAAA,EAC5C,OAAQ,CACN,OAAQ,QACR,QAASf,EAAO,CACd,OAAQ,CAAC,CAAE,MAAAC,CAAA,IAAYA,EAAM,MAAA,CAC9B,CAAA,EAEH,QAAS,CACP,OAAQ,QACR,QAASD,EAAO,CACd,MAAO,CAAC,CAAE,MAAAC,KAAYA,EAAM,MAAM,OAAA,CACnC,CAAA,CACH,EAGF,GAAI,CACF,cAAe,CACb,OAAQ,QACR,QAAS,WAAA,EAEX,iBAAkB,CAChB,OAAQ,QACR,QAAS,UAAA,CACX,CACF,EAGF,MAAO,CACL,GAAI,CACF,aAAc,CACZ,OAAQ,UACR,QAAS,mBAAA,EAEX,WAAY,CACV,OAAQ,UACR,QAAS,CAAC,kBAAmBD,EAAO,CAClC,eAAgB,CAAC,CAAE,MAAAC,CAAA,IACjBA,EAAM,OAAS,aAAeA,EAAM,MAAM,SAAW,CAAA,CAAC,CACzD,CAAC,CAAA,EAEJ,aAAc,CACZ,OAAQ,UAAA,EAEV,YAAa,CACX,OAAQ,SAAA,CACV,CACF,EAGF,QAAS,CACP,GAAI,CACF,WAAY,CACV,OAAQ,QAAA,EAEV,YAAa,CACX,OAAQ,QACR,QAAS,mBAAA,EAEX,aAAc,CACZ,QAAS,aAAA,EAEX,eAAgB,CACd,QAAS,eAAA,CACX,CACF,EAGF,OAAQ,CACN,MAAO,CAAC,eAAgB,YAAY,EACpC,KAAM,cAEN,OAAQ,CACN,IAAK,YACL,MAAO,CAAC,CAAE,QAAAC,EAAS,MAAAD,EAAO,KAAAc,KAAW,CACnC,MAAMC,EAAYD,EAAK,SAAS,OAAS,CAAA,EACzC,OAAId,EAAM,OAAS,aACV,CACL,GAAGe,EACH,KAAMf,EAAM,KACZ,eAAgBA,EAAM,eACtB,QAASC,EAAQ,cAAc,EAAA,EAG5Bc,CACT,EACA,OAAQ,CACN,OAAQ,QACR,QAAS,CACPhB,EAAO,CACL,OAAQ,CAAC,CAAE,QAAAE,EAAS,MAAAD,KAAY,CAC9B,MAAMgB,EAAahB,EAAM,OACnBG,EAAgBF,EAAQ,OAAO,aAAeG,EAAE,KAAOY,EAAW,EAAE,EAC1E,GAAIb,GAAiB,EAAG,CAEtB,MAAME,EAAY,CAAC,GAAGJ,EAAQ,MAAM,EACpC,OAAAI,EAAUF,CAAa,EAAIa,EACpBX,CACT,KAEE,OAAO,CAAC,GAAGJ,EAAQ,OAAQe,CAAU,CAEzC,CAAA,CACD,EACD,mBAAA,CACF,EAEF,QAAS,CACP,OAAQ,QACR,QAASjB,EAAO,CACd,MAAO,CAAC,CAAE,MAAAC,KAAYA,EAAM,MAAM,OAAA,CACnC,CAAA,CACH,EAGF,GAAI,CACF,YAAa,CACX,OAAQ,QACR,QAAS,CAAC,mBAAoB,mBAAmB,CAAA,EAEnD,iBAAkB,CAChB,OAAQ,QACR,QAAS,UAAA,CACX,CACF,EAGF,SAAU,CACR,MAAO,CAAC,eAAgB,YAAY,EACpC,KAAM,cAEN,OAAQ,CACN,IAAK,cACL,MAAO,CAAC,CAAE,MAAAA,EAAO,KAAAc,KAAW,CAC1B,MAAMC,EAAYD,EAAK,SAAS,OAAS,CAAA,EACzC,OAAId,EAAM,OAAS,eACV,CACL,GAAGe,EACH,QAASf,EAAM,OAAA,EAGZe,CACT,EACA,OAAQ,CACN,OAAQ,QACR,QAAShB,EAAO,CACd,OAAQ,CAAC,CAAE,QAAAE,EAAS,MAAAD,CAAA,IAClBC,EAAQ,OAAO,OAAOG,GAAKA,EAAE,KAAOJ,EAAM,MAAM,CAAA,CACnD,CAAA,EAEH,QAAS,CACP,OAAQ,QACR,QAASD,EAAO,CACd,MAAO,CAAC,CAAE,MAAAC,KAAYA,EAAM,MAAM,OAAA,CACnC,CAAA,CACH,EAGF,GAAI,CACF,cAAe,CACb,OAAQ,QACR,QAAS,aAAA,EAEX,iBAAkB,CAChB,OAAQ,QACR,QAAS,UAAA,CACX,CACF,EAGF,MAAO,CACL,GAAI,CACF,YAAa,CACX,OAAQ,UACR,QAAS,YAAA,EAEX,aAAc,CACZ,OAAQ,UACR,QAAS,CAAC,aAAc,mBAAmB,CAAA,CAC7C,CACF,CACF,CAEJ,CAAC,ECjdM,SAASiB,IAAqB,CAEnC,MAAMC,EAAQC,EAAwD,IAAI,EAGpEC,EAAQD,EAAI,MAAM,EAClBE,EAASF,EAAkB,EAAE,EAC7BG,EAAeH,EAAuB,IAAI,EAC1CI,EAAkBJ,EAAiB,EAAE,EACrCK,EAAiBL,EAAc,EAAE,EACjCM,EAAQN,EAAmB,IAAI,EAC/BO,EAAYP,EAAI,EAAK,EAGrBQ,EAASC,EAAS,IAAMR,EAAM,QAAU,MAAM,EAC9CS,EAAkBD,EAAS,IAAMR,EAAM,QAAU,SAAS,EAC1DU,EAAUF,EAAS,IAAMR,EAAM,QAAU,OAAO,EAChDW,EAAYH,EAAS,IAAMR,EAAM,QAAU,SAAS,EACpDY,EAAWJ,EAAS,IAAMR,EAAM,QAAU,QAAQ,EAClDa,EAAaL,EAAS,IAAMR,EAAM,QAAU,UAAU,EACtDc,EAAWN,EAAS,IAAMR,EAAM,QAAU,OAAO,EACjDe,EAAYP,EAAS,IAAMP,EAAO,MAAM,OAAS,CAAC,EAClDe,EAAgBR,EAAS,IAAMG,EAAU,OAAST,EAAa,QAAU,IAAI,EAC7Ee,EAAoBT,EAAS,IAAMG,EAAU,OAAST,EAAa,QAAU,IAAI,EAGvFgB,EAAU,IAAM,CACdpB,EAAM,MAAQqB,EAAY1C,EAAsB,EAGhDqB,EAAM,MAAM,UAAWsB,GAAa,CAClCpB,EAAM,MAAQoB,EAAS,MACvBnB,EAAO,MAAQmB,EAAS,QAAQ,OAChClB,EAAa,MAAQkB,EAAS,QAAQ,aACtCjB,EAAgB,MAAQiB,EAAS,QAAQ,gBACzChB,EAAe,MAAQgB,EAAS,QAAQ,eACxCf,EAAM,MAAQe,EAAS,QAAQ,MAC/Bd,EAAU,MAAQc,EAAS,QAAQ,SACrC,CAAC,EAEDtB,EAAM,MAAM,MAAA,CACd,CAAC,EAGDuB,EAAY,IAAM,CACZvB,EAAM,OACRA,EAAM,MAAM,KAAA,CAEhB,CAAC,EAGD,MAAMwB,EAAa,IAAM,CACnBxB,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,cAAe,CAE5C,EAEMyB,EAAc,IAAM,CACpBzB,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,eAAgB,CAE7C,EAEM0B,EAAaC,GAAsB,CACnC3B,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,aAAc,MAAA2B,EAAO,CAElD,EAEMC,EAAY,CAACC,EAAcC,IAAuB,CAClD9B,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,aAAc,KAAA6B,EAAM,eAAgBC,EAAU,CAE3E,EAEMC,EAAeC,GAAoB,CACnChC,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,eAAgB,QAAAgC,EAAS,CAEtD,EAEMC,EAAa,IAAM,CACnBjC,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,cAAe,CAE5C,EAEMkC,EAAeC,GAAoB,CACnCnC,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,eAAgB,QAAAmC,EAAS,CAEtD,EAEMC,EAAiBD,GAAoB,CACrCnC,EAAM,OACRA,EAAM,MAAM,KAAK,CAAE,KAAM,iBAAkB,QAAAmC,EAAS,CAExD,EAEME,EAAwBF,GAAoB,CAC5C7B,EAAe,MAAM,SAAS6B,CAAO,EACvCC,EAAcD,CAAO,EAErBD,EAAYC,CAAO,CAEvB,EAEMG,EAAmBH,GAChBzB,EAAS,IAAMJ,EAAe,MAAM,SAAS6B,CAAO,CAAC,EAG9D,MAAO,CAEL,MAAOzB,EAAS,IAAMR,EAAM,KAAK,EACjC,OAAQQ,EAAS,IAAMP,EAAO,KAAK,EACnC,aAAcO,EAAS,IAAMN,EAAa,KAAK,EAC/C,gBAAiBM,EAAS,IAAML,EAAgB,KAAK,EACrD,eAAgBK,EAAS,IAAMJ,EAAe,KAAK,EACnD,MAAOI,EAAS,IAAMH,EAAM,KAAK,EACjC,UAAWG,EAAS,IAAMF,EAAU,KAAK,EAGzC,OAAAC,EACA,gBAAAE,EACA,QAAAC,EACA,UAAAC,EACA,SAAAC,EACA,WAAAC,EACA,SAAAC,EACA,UAAAC,EACA,cAAAC,EACA,kBAAAC,EAGA,WAAAK,EACA,YAAAC,EACA,UAAAC,EACA,UAAAE,EACA,YAAAG,EACA,WAAAE,EACA,YAAAC,EACA,cAAAE,EACA,qBAAAC,EACA,gBAAAC,CAAA,CAEJ,mhDCyJA,MAAMC,EAAgBC,EAAA,EAChBC,EAAiBC,GAAA,EACjBC,EAAkB5C,GAAA,EAGlB6C,EAAc3C,EAAY,EAAE,EAC5B4C,EAAgB5C,EAAY,EAAE,EAC9B6C,EAAc7C,EAAiB,QAAQ,EACvC8C,EAAkB9C,EAAY,GAAG,EACjC+C,EAAa/C,EAAY,SAAS,EAClCgD,EAAiBhD,EAAY,IAAI,EAGjCiD,EAAYjD,EAAY,EAAE,EAG1BkD,EAAiBzC,EAAS,IAAMiC,EAAgB,cAAc,KAAK,EACnES,EAAe1C,EAAS,IAAMiC,EAAgB,kBAAkB,KAAK,EACrErC,EAAiBI,EAAS,IAAMiC,EAAgB,eAAe,KAAK,EAGpEU,EAAe,IAAM,CACrBT,EAAY,OACdL,EAAc,QAAQK,EAAY,KAAK,CAE3C,EAEMlB,EAAY,IAAM,CACtB,MAAMC,EAAQgB,EAAgB,OAAO,MAAM,KAAKzD,GAAKA,EAAE,KAAO2D,EAAc,KAAK,EAC7ElB,IACFgB,EAAgB,UAAUhB,CAAK,EAC/BuB,EAAU,MAAQvB,EAAM,KAE5B,EAEMI,EAAc,IAAM,CACpBc,EAAc,OACM,QAAQ,6CAA6C,IAEzEF,EAAgB,YAAYE,EAAc,KAAK,EAC/CA,EAAc,MAAQ,GAG5B,EAEMjB,EAAY,IAAM,CAClBsB,EAAU,OAAS5C,EAAe,MAAM,OAAS,IACnDqC,EAAgB,UAAUO,EAAU,MAAO5C,EAAe,KAAK,EAC/D4C,EAAU,MAAQ,GAEtB,EAEMI,EAAkB,IAAM,CAC5BX,EAAgB,WAAA,EAChBO,EAAU,MAAQ,EACpB,EAEMK,EAAiB,IAAM,CAC3BZ,EAAgB,YAAA,EAChBO,EAAU,MAAQ,EACpB,EAGMb,EAAwBF,GAAoB,CAChDQ,EAAgB,qBAAqBR,CAAO,CAC9C,EAEMG,EAAmBH,GAChBQ,EAAgB,gBAAgBR,CAAO,EAAE,MAIlD,OAAAqB,GACE,IAAMjB,EAAc,YAAY,MAC/BkB,GAAgB,CACXA,IACEhB,EAAe,OAAO,OACxBA,EAAe,YAAA,EAEbE,EAAgB,OAAO,OACzBA,EAAgB,WAAA,EAGtB,CAAA,EAIFvB,EAAU,IAAM,CACVmB,EAAc,YAAY,OACxBI,EAAgB,OAAO,OACzBA,EAAgB,WAAA,CAGtB,CAAC,EAGgBjC,EAA+B,KAAO,CACrD,OAAQ6B,EAAc,OAAO,OAAS,OACtC,gBAAiBM,EAAc,OAAS,OACxC,YAAaC,EAAY,MACzB,gBAAiBA,EAAY,QAAU,aAAeC,EAAgB,MAAQ,OAC9E,WAAYD,EAAY,QAAU,QAAUE,EAAW,MAAQ,OAC/D,eAAgBF,EAAY,QAAU,YAAcG,EAAe,MAAQ,MAAA,EAC3E,UAxZAS,EAAA,EAAAC,EAsSM,MAtSNC,GAsSM,CApSJC,EAoDU,UApDVC,GAoDU,CAnDRC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAA0B,UAAtB,oBAAiB,EAAA,GACrBA,EAiDM,MAjDNG,GAiDM,CAhDJD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAmC,QAAA,CAA5B,IAAI,QAAA,EAAS,UAAO,EAAA,GAC3BA,EA2BM,MA3BNI,GA2BM,GA1BJJ,EASE,QAAA,CARA,GAAG,8CACMjB,EAAW,MAAAsB,GACpB,KAAK,WACL,MAAM,aACN,YAAY,2BACZ,aAAa,MACZ,SAAUC,EAAA5B,CAAA,EAAc,aACxB,WAAac,EAAY,CAAA,OAAA,CAAA,CAAA,kBANjBT,EAAA,KAAW,CAAA,GASduB,EAAA5B,CAAA,EAAc,gBAAkB4B,EAAA5B,CAAA,EAAc,cADtDoB,EAQS,SAAA,OANP,MAAM,kBACL,SAAQ,CAAGf,EAAA,OAAeuB,EAAA5B,CAAA,EAAc,aACxC,QAAOc,CAAA,GAEIc,EAAA5B,CAAA,EAAc,cAA1BmB,EAAA,EAAAC,EAA4D,UAApB,eAAa,IACrDD,EAAA,EAAAC,EAA2B,UAAd,SAAO,EAAA,SAGTQ,EAAA5B,CAAA,EAAc,iBAD3BoB,EAMS,SAAA,OAJP,MAAM,oBACL,QAAKI,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAE,IAAAK,IAAAD,EAAA5B,CAAA,EAAc,YAAd4B,EAAA5B,CAAA,EAAc,WAAU,GAAA6B,CAAA,EAAA,EACjC,cAED,cAISD,EAAA5B,CAAA,EAAc,cAAzBmB,IAAAC,EAGM,MAHNU,GAGMN,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,IAAO,0BAEpC,EAAA,CAAA,KACgBM,EAAA5B,CAAA,EAAc,aAA9BmB,EAAA,EAAAC,EAGM,MAHNW,GAGMP,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,IAAO,mCAEpC,EAAA,CAAA,KACgBM,EAAA5B,CAAA,EAAc,UAA9BmB,IAAAC,EAIM,MAJNY,GAIM,CAHJR,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,GAAOW,EAAA,IAClCC,EAAGN,EAAA5B,CAAA,EAAc,KAAK,EAAG,IACzB,CAAA,EAAAsB,EAAoE,SAAA,CAA5D,MAAM,WAAY,QAAKE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAE,IAAAK,IAAAD,EAAA5B,CAAA,EAAc,OAAd4B,EAAA5B,CAAA,EAAc,MAAK,GAAA6B,CAAA,EAAA,EAAE,OAAK,CAAA,aAG7DL,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAEQ,QAAA,CAFD,MAAM,aAAY,uFAEzB,EAAA,EAAA,KAKJA,EAiFU,UAjFVa,GAiFU,CAhFRX,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAyB,UAArB,mBAAgB,EAAA,GAGTM,EAAAxB,CAAA,EAAgB,QAA3Be,IAAAC,EAWM,MAXNgB,GAWM,CAVJd,EAMS,SAAA,CALP,MAAM,kBACL,SAAQ,CAAGM,EAAA5B,CAAA,EAAc,YACzB,QAAKwB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAE,IAAAK,IAAAD,EAAAxB,CAAA,EAAgB,YAAhBwB,EAAAxB,CAAA,EAAgB,WAAU,GAAAyB,CAAA,EAAA,EACnC,gBAED,EAAAQ,EAAA,EACAb,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAEQ,QAAA,CAFD,MAAM,aAAY,4DAEzB,EAAA,EAAA,IAIcM,EAAAxB,CAAA,EAAgB,iBAAhCe,EAAA,EAAAC,EAGM,MAHNkB,GAGMd,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,IAAO,sBAEpC,EAAA,CAAA,KAGgBM,EAAAxB,CAAA,EAAgB,UAAhCe,IAAAC,EAIM,MAJNmB,GAIM,CAHJf,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,GAAOW,EAAA,IAClCC,EAAGN,EAAAxB,CAAA,EAAgB,KAAK,EAAG,IAC3B,CAAA,EAAAkB,EAA2E,SAAA,CAAnE,MAAM,WAAY,QAAKE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAE,IAAAK,IAAAD,EAAAxB,CAAA,EAAgB,YAAhBwB,EAAAxB,CAAA,EAAgB,WAAU,GAAAyB,CAAA,EAAA,EAAE,OAAK,CAAA,IAIpDD,EAAAxB,CAAA,EAAgB,SAAhCe,IAAAC,EAiDM,MAjDNoB,GAiDM,CAhDJlB,EAmBM,MAnBNmB,GAmBM,CAlBJjB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAA4C,QAAA,CAArC,IAAI,aAAA,EAAc,cAAW,EAAA,KACpCA,EAgBS,SAAA,CAfP,GAAG,mDACMhB,EAAa,MAAAqB,GACtB,MAAM,cACL,SAAQ,CAAGC,EAAAxB,CAAA,EAAgB,SAAA,GAE5BkB,EAES,SAFToB,GAESR,EADJN,EAAAxB,CAAA,EAAgB,UAAS,0BAAA,iBAAA,EAAA,CAAA,GAE9Be,EAAA,EAAA,EAAAC,EAMSuB,EAAA,KAAAC,EALShB,EAAAxB,CAAA,EAAgB,OAAzBhB,QADTgC,EAMS,SAAA,CAJN,IAAKhC,EAAM,GACX,MAAOA,EAAM,EAAA,IAEXA,EAAM,IAAI,EAAG,KAAE8C,EAAG9C,EAAM,SAAS,MAAM,EAAG,YAC/C,EAAAyD,EAAA,qBAbSvC,EAAA,KAAa,CAAA,KAiB1BgB,EA0BM,MA1BNwB,GA0BM,CAzBJxB,EAOS,SAAA,CANP,KAAK,SACL,MAAM,oBACL,SAAQ,CAAGhB,EAAA,OAAiBsB,EAAAxB,CAAA,EAAgB,UAC5C,QAAOjB,CAAA,EACT,YAED,EAAA4D,EAAA,EACAzB,EAQS,SAAA,CAPP,KAAK,SACL,MAAM,iBACL,SAAQ,CAAGhB,EAAA,OAAiBsB,EAAAxB,CAAA,EAAgB,UAC5C,QAAOZ,CAAA,GAEIoC,EAAAxB,CAAA,EAAgB,YAA5Be,EAAA,EAAAC,EAA0D,UAAlB,aAAW,IACnDD,EAAA,EAAAC,EAA8B,UAAjB,YAAU,EAAA,QAEzBE,EAOS,SAAA,CANP,KAAK,SACL,MAAM,kBACL,SAAUM,EAAAxB,CAAA,EAAgB,UAC1B,QAAOY,CAAA,EACT,uBAED,EAAAgC,EAAA,CAAA,iBAOEpC,EAAA,OAAkBC,EAAA,OAD1BM,IAAAC,EA8FU,UA9FV6B,GA8FU,CAzFR3B,EAA+D,YAAxDT,EAAA,MAAY,aAAA,kBAAA,EAAA,CAAA,EAGRe,EAAAxB,CAAA,EAAgB,UAA3Be,IAAAC,EAGM,MAHN8B,GAGM,CAFJ1B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,GAAOW,EAAA,MAC/BpB,EAAA,MAAY,oBAAA,mBAAA,EAAA,CAAA,CAAA,SAGjBO,EAgFM,MAAA+B,GAAA,CA/EJ7B,EAUM,MAVN8B,GAUM,CATJ5B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAyC,QAAA,CAAlC,IAAI,WAAA,EAAY,aAAU,EAAA,KACjCA,EAOE,QAAA,CANA,GAAG,iDACMX,EAAS,MAAAgB,GAClB,KAAK,OACL,MAAM,aACN,YAAY,mBACX,SAAUC,EAAAxB,CAAA,EAAgB,SAAA,iBAJlBO,EAAA,KAAS,CAAA,KAQtBW,EA+CM,MA/CN+B,GA+CM,CA9CJ7B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAA4B,aAArB,gBAAa,EAAA,GAGTM,EAAA1B,CAAA,EAAe,QAA1BiB,IAAAC,EAGM,MAHNkC,GAGM9B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,IAAO,gCAEpC,EAAA,CAAA,KAGgBM,EAAA1B,CAAA,EAAe,kBAA/BiB,EAAA,EAAAC,EAGM,MAHNmC,GAGM/B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,IAAO,0BAEpC,EAAA,CAAA,KAGgBM,EAAA1B,CAAA,EAAe,UAA/BiB,IAAAC,EAIM,MAJNoC,GAIM,CAHJhC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAkC,OAAA,CAA5B,MAAM,aAAA,EAAc,IAAC,EAAA,GAAOW,EAAA,IAClCC,EAAGN,EAAA1B,CAAA,EAAe,KAAK,EAAG,IAC1B,CAAA,EAAAoB,EAA0E,SAAA,CAAlE,MAAM,WAAY,QAAKE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAE,IAAAK,IAAAD,EAAA1B,CAAA,EAAe,YAAf0B,EAAA1B,CAAA,EAAe,WAAU,GAAA2B,CAAA,EAAA,EAAE,OAAK,CAAA,IAInDD,EAAA1B,CAAA,EAAe,SAAW0B,EAAA1B,CAAA,EAAe,WAAzDiB,EAAA,EAAAC,EAiBM,MAjBNqC,GAiBM,EAhBJtC,EAAA,EAAA,EAAAC,EAeMuB,EAAA,KAAAC,EAdYhB,EAAA1B,CAAA,EAAe,OAAxBwD,QADTtC,EAeM,MAAA,CAbH,IAAKsC,EAAM,MACZ,MAAM,gBAAA,GAENpC,EAME,QAAA,CALC,GAAE,SAAWoC,EAAM,KAAK,GACxB,QAAS3D,EAAgB2D,EAAM,KAAK,EACrC,KAAK,WACL,MAAM,WACL,SAAM/B,GAAE7B,EAAqB4D,EAAM,KAAK,CAAA,cAE3CpC,EAEQ,QAAA,CAFA,IAAG,SAAWoC,EAAM,KAAK,GAAI,MAAM,gBAAA,EACtCxB,EAAAwB,EAAM,KAAK,EAAA,EAAAC,EAAA,CAAA,eAMpBxC,EAAA,EAAAC,EAGM,MAHNwC,GAGMpC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFJF,EAAmC,OAAA,CAA7B,MAAM,aAAA,EAAc,KAAE,EAAA,IAAO,0FAErC,EAAA,CAAA,OAGFA,EAiBM,MAjBNuC,GAiBM,CAhBJvC,EAOS,SAAA,CANP,KAAK,SACL,MAAM,oBACL,SAAUM,EAAAxB,CAAA,EAAgB,UAC1B,QAAOW,CAAA,EACT,WAED,EAAA+C,EAAA,EACAxC,EAOS,SAAA,CANP,KAAK,SACL,MAAM,kBACL,SAAQ,CAAGX,SAAa5C,EAAA,MAAe,SAAM,GAAU6D,EAAAxB,CAAA,EAAgB,UACvE,QAAOf,CAAA,IAELwB,EAAA,MAAY,eAAA,cAAA,EAAA,EAAAkD,EAAA,CAAA,kBAOvBzC,EAuDU,UAvDV0C,GAuDU,CAtDRxC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAqB,UAAjB,eAAY,EAAA,GAChBA,EAcM,MAdN2C,GAcM,CAbJzC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAA6C,QAAA,CAAtC,IAAI,aAAA,EAAc,eAAY,EAAA,KACrCA,EAWS,SAAA,CAVP,GAAG,mDACMf,EAAW,MAAAoB,GACpB,MAAM,aAAA,4YADGpB,EAAA,KAAW,CAAA,KAabA,EAAA,QAAW,cAAtBY,IAAAC,EAWM,MAXN8C,GAWM,CAVJ1C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAA8C,QAAA,CAAvC,IAAI,YAAA,EAAa,iBAAc,EAAA,KACtCA,EAOE,QAAA,CANA,GAAG,kDACad,EAAe,MAAAmB,GAC/B,KAAK,QACL,IAAI,IACJ,IAAI,MACJ,MAAM,YAAA,gBAJUnB,EAAA,aAAR,CAAA,OAAR,EAAA,CAAgC,IAMlCc,EAAuD,OAAvD6C,GAAuDjC,EAA1B1B,EAAA,KAAe,EAAG,IAAC,CAAA,CAAA,aAGvCD,EAAA,QAAW,SAAtBY,IAAAC,EAQM,MARNgD,GAQM,CAPJ5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAgC,QAAA,CAAzB,IAAI,OAAA,EAAQ,QAAK,EAAA,KACxBA,EAKE,QAAA,CAJA,GAAG,+CACMb,EAAU,MAAAkB,GACnB,KAAK,QACL,MAAM,YAAA,gBAFGlB,EAAA,KAAU,CAAA,eAMZF,EAAA,QAAW,aAAtBY,IAAAC,EAYM,MAZNiD,GAYM,CAXJ7C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAoD,QAAA,CAA7C,IAAI,WAAA,EAAY,wBAAqB,EAAA,KAC5CA,EAQE,QAAA,CAPA,GAAG,mDACaZ,EAAc,MAAAiB,GAC9B,KAAK,QACL,IAAI,OACJ,IAAI,OACJ,KAAK,MACL,MAAM,YAAA,gBALUjB,EAAA,aAAR,CAAA,OAAR,EAAA,CAA+B,IAOjCY,EAAsD,OAAtDgD,GAAsDpC,EAAzBxB,EAAA,KAAc,EAAG,IAAC,CAAA,CAAA,iEC9RvD6D,GAAA,EAGA,MAAMC,EAAMC,GAAUC,EAAG,EAGzBF,EAAI,UAAU,YAAaG,EAAgB,EAG3CH,EAAI,MAAM,MAAM"}